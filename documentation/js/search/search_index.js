var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.064,1,0.432]],["body/components/AppComponent.html",[0,0.111,1,0.783,2,1.063,3,0.638,4,0.544,5,0.966,6,0.966,7,0.966,8,0.966,9,0.544,10,2.839,11,0.966,12,1.539,13,0.868,14,3.564,15,1.212,16,4.81,17,1.212,18,4.401,19,0.638,20,0.926,21,2.842,22,0.638,23,0.049,24,0.847,25,1.405,26,1.242,27,3.564,28,3.564,29,3.012,30,0.847,31,3.506,32,0.638,33,0.544,34,0.638,35,0.638,36,0.966,37,1.212,38,1.212,39,0.966,40,1.389,41,0.966,42,0.926,43,0.966,44,0.544,45,0.847,46,1.389,47,0.544,48,0.738,49,0.544,50,0.738,51,0.544,52,0.738,53,0.544,54,0.847,55,0.966,56,0.544,57,0.847,58,0.966,59,0.544,60,0.926,61,0.638,62,1.212,63,0.544,64,0.638,65,0.544,66,0.847,67,0.847,68,0.966,69,0.966,70,0.038,71,0.038]],["title/modules/AppModule.html",[72,1.264,73,1.646]],["body/modules/AppModule.html",[0,0.097,1,0.833,3,0.486,4,0.415,9,0.415,13,0.415,23,0.05,32,1.023,33,0.415,34,0.486,35,0.486,44,0.763,45,0.646,47,0.763,48,0.563,49,0.763,50,0.563,51,0.782,52,0.563,53,0.782,54,0.889,56,0.763,57,0.646,59,0.763,60,0.775,61,0.669,63,0.763,64,0.669,65,0.782,66,1.017,70,0.032,71,0.032,73,3.342,74,1.38,75,2.175,76,2.164,77,2.164,78,2.164,79,2.164,80,2.538,81,2.981,82,2.164,83,1.38,84,2.673,85,3.681,86,2.981,87,3.681,88,2.981,89,3.681,90,2.164,91,3.681,92,2.981,93,1.83,94,2.673,95,2.673,96,3.681,97,2.673,98,3.681,99,2.673,100,3.681,101,2.673,102,3.681,103,2.673,104,3.681,105,2.673,106,2.164,107,3.681,108,0.736,109,3.681,110,1.213,111,1.213,112,3.681,113,2.164,114,1.9,115,2.981,116,1.83,117,3.105,118,1.83,119,2.673,120,2.164,121,2.175,122,1.213,123,3.681,124,2.673,125,1.38,126,1.38,127,1.38,128,1.83,129,2.673,130,1.579,131,2.164,132,1.38,133,2.673,134,4.536,135,1.579,136,2.673,137,2.673,138,2.673,139,2.673,140,2.673]],["title/modules/AppRoutingModule.html",[72,1.264,80,1.437]],["body/modules/AppRoutingModule.html",[3,0.762,4,0.65,9,0.65,23,0.049,32,0.892,33,0.65,34,0.762,35,0.762,70,0.042,71,0.042,74,2.163,80,2.531,86,3.393,88,3.97,120,3.97,121,3.072,122,1.902,132,2.163,141,4.19,142,4.19,143,4.19,144,4.19]],["title/components/DescriptionCardComponent.html",[0,0.064,44,0.432]],["body/components/DescriptionCardComponent.html",[0,0.105,1,0.485,2,0.987,3,0.568,4,0.485,5,0.86,6,0.86,7,0.86,8,0.86,9,0.485,11,0.86,12,1.515,13,0.854,15,1.126,17,1.126,19,0.568,20,0.86,21,1.846,22,0.912,23,0.049,24,0.987,30,1.1,32,0.743,33,0.485,34,0.568,35,0.568,36,0.86,37,1.126,38,1.126,39,0.86,40,1.331,41,0.86,42,0.959,43,0.86,44,0.75,45,1.299,46,1.331,47,0.485,48,0.658,49,0.485,50,0.658,51,0.485,52,0.658,53,0.485,54,0.755,55,0.86,56,0.485,57,0.755,58,0.86,59,0.485,60,0.86,61,0.568,62,1.126,63,0.485,64,0.568,65,0.485,66,0.755,67,0.755,68,0.86,69,0.86,70,0.035,71,0.035,108,0.86,127,2.494,145,3.913,146,1.612,147,1.278,148,1.424,149,2.11,150,2.692,151,2.415,152,1.255,153,1.381,154,1.126,155,1.511,156,1.126,157,2.138,158,2.351,159,2.53,160,0.86,161,0.86,162,3.124,163,0.86,164,1.278,165,1.846,166,2.11,167,2.138,168,1.418,169,1.612,170,1.418,171,4.087,172,3.309,173,2.11]],["title/components/DirectorCardComponent.html",[0,0.064,47,0.432]],["body/components/DirectorCardComponent.html",[0,0.104,1,0.477,2,0.976,3,0.558,4,0.477,5,0.846,6,0.846,7,0.846,8,0.846,9,0.477,11,0.846,12,1.511,13,0.852,15,1.113,17,1.113,19,0.558,20,0.851,22,0.907,23,0.049,24,1.159,30,1.091,32,0.735,33,0.477,34,0.558,35,0.558,36,0.846,37,1.113,38,1.113,39,0.846,40,1.322,41,0.846,42,1.01,43,0.846,44,0.477,45,0.742,46,1.322,47,0.745,48,1.115,49,0.477,50,0.646,51,0.477,52,0.646,53,0.477,54,0.742,55,0.846,56,0.477,57,0.742,58,0.846,59,0.477,60,0.851,61,0.558,62,1.113,63,0.477,64,0.558,65,0.477,66,0.742,67,0.742,68,0.846,69,0.846,70,0.035,71,0.035,108,0.846,126,2.477,146,1.585,147,1.263,148,1.412,149,2.086,150,2.669,151,2.388,152,1.244,153,1.373,154,1.113,155,1.501,156,1.113,157,2.102,158,2.331,159,2.486,160,0.846,161,0.846,163,0.846,164,1.263,165,1.814,166,2.086,167,2.102,168,1.394,169,1.585,170,1.394,173,2.086,174,3.886,175,3.07,176,2.102,177,2.102,178,2.102,179,3.272,180,4.041,181,4.041,182,4.041,183,4.041,184,4.041]],["title/components/GenreCardComponent.html",[0,0.064,49,0.432]],["body/components/GenreCardComponent.html",[0,0.105,1,0.485,2,0.987,3,0.568,4,0.485,5,0.86,6,0.86,7,0.86,8,0.86,9,0.485,11,0.86,12,1.515,13,0.854,15,1.126,17,1.126,19,0.568,20,0.86,22,0.912,23,0.049,24,0.987,30,1.1,32,0.743,33,0.485,34,0.568,35,0.568,36,0.86,37,1.126,38,1.126,39,0.86,40,1.331,41,0.86,42,1.017,43,0.86,44,0.485,45,0.987,46,1.331,47,0.485,48,0.658,49,0.75,50,1.119,51,0.485,52,0.658,53,0.485,54,0.755,55,0.86,56,0.485,57,0.755,58,0.86,59,0.485,60,0.86,61,0.568,62,1.126,63,0.485,64,0.568,65,0.485,66,0.755,67,0.755,68,0.86,69,0.86,70,0.035,71,0.035,108,0.86,125,2.494,146,1.612,147,1.278,148,1.424,149,2.11,150,2.692,151,2.415,152,1.255,153,1.381,154,1.126,155,1.511,156,1.126,157,2.138,158,2.351,160,0.86,161,0.86,163,0.86,164,1.278,165,1.846,166,2.11,168,1.418,169,1.612,170,1.418,172,3.309,173,2.11,179,3.309,185,3.913,186,3.124,187,2.53,188,2.53]],["title/components/MovieCardComponent.html",[0,0.064,51,0.432]],["body/components/MovieCardComponent.html",[0,0.062,1,0.198,2,0.508,3,0.487,4,0.198,5,0.352,6,0.352,7,0.352,8,0.352,9,0.198,11,0.352,12,1.25,13,0.704,15,0.579,17,0.579,19,0.232,20,0.442,21,1.581,22,0.84,23,0.05,24,1.319,25,1.072,26,0.948,30,1.188,32,0.766,33,0.198,34,0.232,35,0.232,36,0.352,37,0.579,38,0.579,39,0.352,40,0.854,41,0.352,42,1.053,43,0.352,44,0.481,45,1.134,46,0.854,47,0.481,48,0.653,49,0.481,50,0.653,51,0.481,52,1.061,53,0.198,54,0.828,55,0.352,56,0.198,57,0.309,58,0.352,59,0.198,60,0.955,61,0.232,62,0.579,63,0.198,64,0.232,65,0.198,66,0.828,67,0.828,68,0.352,69,0.352,70,0.018,71,0.018,72,1.215,83,1.6,108,0.352,110,0.58,111,0.58,116,3.397,117,1.832,122,0.58,125,0.66,126,0.66,127,0.66,132,1.085,135,2.403,146,0.66,148,0.4,149,1.902,150,1.581,151,1.242,152,1.16,153,0.737,154,0.579,155,0.969,156,0.579,160,1.072,161,1.072,163,1.224,164,1.538,167,0.875,170,2.018,176,2.522,177,2.522,178,2.522,187,1.702,188,1.035,189,4.018,190,3.512,191,2.294,192,1.6,193,1.768,194,2.167,195,2.774,196,2.345,197,2.167,198,2.167,199,2.167,200,2.167,201,3.426,202,2.167,203,2.774,204,0.66,205,1.213,206,2.345,207,1.768,208,3.042,209,1.702,210,1.278,211,1.846,212,1.492,213,2.784,214,1.438,215,2.122,216,3.042,217,2.511,218,2.665,219,2.511,220,2.102,221,2.102,222,2.883,223,1.278,224,2.167,225,2.511,226,2.167,227,1.085,228,1.702,229,1.278,230,1.702,231,1.278,232,2.385,233,1.832,234,1.702,235,2.511,236,1.438,237,1.702,238,1.702,239,1.702,240,2.385,241,2.511,242,2.511,243,1.702,244,1.278,245,1.702,246,1.278,247,2.522,248,1.702,249,1.278,250,1.702,251,1.278,252,1.278,253,1.832,254,2.122,255,1.702,256,1.278,257,1.438,258,1.702,259,1.702,260,1.278,261,1.702,262,1.278,263,1.278,264,1.278,265,1.215,266,1.085,267,1.085,268,1.702,269,0.66,270,0.66,271,1.278,272,1.278,273,0.755,274,1.035,275,1.035,276,1.242,277,0.842,278,1.035,279,0.66,280,1.438,281,0.875,282,0.755,283,1.035,284,1.035,285,1.035,286,1.035,287,1.035,288,1.035,289,1.035,290,0.875,291,1.702,292,1.035,293,1.702,294,1.035,295,2.665,296,2.167,297,1.035,298,1.035,299,1.278,300,1.035,301,2.167,302,1.035,303,1.085,304,1.085,305,1.085,306,1.035,307,1.702,308,1.035,309,1.702,310,1.035,311,1.832,312,1.035,313,1.035,314,0.875,315,0.875,316,1.035,317,1.035,318,1.702,319,1.242,320,1.702,321,1.702,322,1.702,323,1.702,324,1.702,325,2.167,326,3.599,327,2.122,328,1.035,329,1.438,330,2.122,331,2.167,332,2.167,333,1.035,334,0.875,335,2.167,336,1.035,337,1.035,338,1.832,339,0.875,340,0.875,341,0.875,342,1.832,343,1.438,344,1.702,345,2.167,346,2.511,347,2.511,348,1.702,349,1.702,350,1.438,351,1.438,352,1.278,353,1.242,354,1.702,355,2.511,356,1.035,357,1.035,358,1.035,359,2.122,360,1.438,361,2.122,362,1.035,363,1.035,364,1.278,365,1.278,366,1.278,367,2.167,368,1.035,369,1.035,370,1.278,371,1.278,372,1.702,373,1.278,374,1.278,375,1.278,376,1.438,377,0.875,378,2.676,379,2.676,380,1.278,381,1.702,382,1.278,383,2.102,384,2.102,385,1.035,386,1.278,387,1.278,388,1.278,389,1.278,390,1.278,391,1.278,392,1.278]],["title/components/ProfileViewComponent.html",[0,0.064,53,0.432]],["body/components/ProfileViewComponent.html",[0,0.063,1,0.204,2,0.52,3,0.497,4,0.204,5,0.363,6,0.363,7,0.363,8,0.363,9,0.204,11,0.363,12,1.261,13,0.711,15,0.593,17,0.593,19,0.24,20,0.453,21,0.778,22,0.847,23,0.05,24,1.32,25,1.095,26,0.968,30,1.206,32,0.797,33,0.204,34,0.24,35,0.24,36,0.363,37,0.593,38,0.593,39,0.363,40,0.87,41,0.363,42,1.059,43,0.363,44,0.49,45,1.143,46,0.87,47,0.49,48,0.665,49,0.49,50,0.665,51,0.424,52,0.922,53,0.49,54,1.106,55,0.363,56,0.334,57,0.763,58,0.363,59,0.204,60,0.996,61,0.24,62,0.593,63,0.204,64,0.24,65,0.204,66,0.66,67,0.66,68,0.363,69,0.363,70,0.018,71,0.018,72,1.433,83,1.797,108,0.593,110,0.598,111,0.598,117,1.871,122,0.598,125,0.68,126,0.68,127,0.68,128,3.444,130,0.778,131,1.067,132,1.112,135,2.432,147,0.674,148,0.855,149,1.112,152,1.173,153,0.753,154,0.593,155,0.987,156,0.593,160,1.086,161,1.086,163,1.261,164,1.573,166,0.68,168,0.598,169,0.68,170,1.989,176,2.558,177,2.558,178,2.558,190,3.333,191,2.405,192,1.63,193,1.797,194,1.744,195,2.819,196,2.383,197,2.213,198,2.213,199,2.213,200,2.213,202,2.213,203,2.819,204,0.68,205,1.233,206,2.383,207,1.797,208,3.071,209,1.744,211,1.697,212,1.397,213,2.558,215,1.475,216,2.817,217,1.744,218,2.383,219,1.744,222,2.817,224,2.213,225,2.557,226,2.213,227,1.112,228,1.744,230,1.744,232,2.363,233,1.866,234,1.744,235,2.557,236,1.475,237,1.744,238,1.744,239,1.744,240,2.316,241,2.557,242,2.557,243,1.744,245,1.744,247,2.817,248,1.744,250,1.744,253,1.866,254,2.161,255,1.744,257,1.475,258,1.744,259,1.744,261,1.744,265,1.581,266,1.63,267,1.63,268,1.744,269,0.68,270,0.68,273,0.778,274,1.067,275,1.067,276,1.273,277,0.528,278,1.067,279,0.68,280,1.475,281,0.902,282,0.778,283,1.067,284,1.067,285,1.067,286,1.067,287,1.067,288,1.067,289,1.067,290,0.902,291,1.744,292,1.067,293,1.744,294,1.067,295,2.817,296,2.557,297,1.067,298,1.067,300,1.067,301,2.213,302,1.067,303,1.112,304,1.112,305,1.112,306,1.067,307,1.744,308,1.067,309,1.744,310,1.067,311,1.871,312,1.067,313,1.067,314,0.902,315,0.902,316,1.067,317,1.067,318,1.744,319,1.615,320,1.744,321,1.744,322,1.744,323,1.744,324,1.744,325,1.067,326,3.333,327,1.475,328,1.067,329,1.475,330,1.475,331,1.744,332,1.067,333,1.067,334,0.902,335,1.744,336,1.067,337,1.067,338,1.475,339,0.902,340,0.902,341,0.902,342,1.871,343,1.475,344,1.744,345,1.744,346,2.213,347,2.557,348,1.067,349,1.067,350,1.475,351,1.475,353,0.778,354,1.067,355,1.744,356,1.067,357,1.067,358,1.067,359,2.161,360,0.902,361,1.475,362,1.067,363,1.067,367,1.067,368,1.067,369,1.067,376,0.902,381,1.067,385,1.067,393,4.074,394,1.067,395,2.154,396,2.733,397,2.154,398,3.481,399,3.481,400,2.154,401,1.317,402,1.317,403,1.317,404,1.317,405,1.317,406,1.317,407,1.317,408,1.317,409,1.317,410,1.317,411,1.744,412,1.317,413,1.317,414,1.317,415,1.317,416,1.317,417,1.317,418,1.317,419,1.067,420,1.317,421,2.154,422,2.154,423,1.317,424,1.475,425,1.744,426,1.475,427,1.317,428,1.317,429,1.317,430,1.317]],["title/components/UpdateInfoComponent.html",[0,0.064,56,0.432]],["body/components/UpdateInfoComponent.html",[0,0.09,1,0.365,2,0.812,3,0.825,4,0.365,5,0.648,6,0.648,7,0.648,8,0.648,9,0.365,11,0.648,12,1.445,13,0.814,15,0.926,17,0.926,19,0.428,20,0.708,22,0.92,23,0.05,24,1.173,25,0.942,26,0.833,30,1.2,32,0.825,33,0.365,34,0.428,35,0.428,36,0.648,37,0.926,38,0.926,39,0.648,40,1.181,41,0.648,42,0.827,43,0.648,44,0.365,45,0.568,46,1.181,47,0.365,48,0.495,49,0.365,50,0.495,51,0.365,52,0.495,53,0.365,54,0.568,55,0.648,56,0.665,57,1.267,58,0.648,59,0.365,60,0.902,61,0.428,62,0.926,63,0.365,64,0.428,65,0.365,66,0.568,67,0.568,68,0.648,69,0.648,70,0.029,71,0.029,106,2.724,108,0.926,110,1.067,111,1.067,130,2.989,147,1.052,148,1.228,152,1.445,153,1.368,154,0.926,155,1.34,156,0.926,158,2.027,160,0.648,161,0.648,163,0.926,164,1.34,165,1.389,166,1.736,168,1.067,169,1.214,192,2.213,193,2.341,204,1.214,205,1.606,207,2.341,211,1.527,212,1.391,232,1.214,265,1.946,266,2.213,267,2.213,269,1.214,270,1.214,277,1.718,281,1.609,303,1.736,304,1.736,305,1.736,424,2.934,431,4.096,432,1.904,433,3.927,434,3.364,435,3.105,436,3.673,437,2.302,438,4.858,439,3.105,440,3.364,441,2.934,442,2.302,443,2.934,444,3.364,445,2.351,446,1.988,447,3.364,448,3.364,449,2.351,450,2.351,451,2.351,452,2.351,453,2.351,454,2.351,455,2.351,456,2.351,457,2.724,458,2.351,459,2.351,460,2.351,461,2.351,462,2.351,463,2.351,464,2.351,465,2.351,466,1.609,467,2.351,468,1.904,469,2.351,470,2.351,471,2.351,472,1.904,473,2.351,474,2.351,475,2.351,476,2.351,477,2.351,478,3.364,479,3.364,480,3.364]],["title/components/UserLoginFormComponent.html",[0,0.064,59,0.432]],["body/components/UserLoginFormComponent.html",[0,0.091,1,0.368,2,0.818,3,0.431,4,0.368,5,0.653,6,0.653,7,0.653,8,0.653,9,0.368,11,0.653,12,1.447,13,0.816,15,0.932,17,0.932,19,0.431,20,0.713,22,0.828,23,0.049,24,0.818,25,0.95,26,0.84,30,1.177,32,0.906,33,0.368,34,0.431,35,0.431,36,0.653,37,0.932,38,0.932,39,0.653,40,1.185,41,0.653,42,0.831,43,0.653,44,0.368,45,0.573,46,1.185,47,0.368,48,0.499,49,0.368,50,0.499,51,0.368,52,0.499,53,0.368,54,0.573,55,0.653,56,0.368,57,0.573,58,0.653,59,0.668,60,1.149,61,1.024,62,0.932,63,0.368,64,0.431,65,0.368,66,0.573,67,0.573,68,0.653,69,0.653,70,0.029,71,0.029,108,0.653,110,1.077,111,1.077,114,2.571,122,1.077,147,1.058,148,1.234,152,1.396,153,1.185,154,0.932,155,1.346,156,0.932,160,0.653,161,0.653,163,0.932,164,1.346,173,1.747,191,1.224,192,2.222,193,2.349,204,1.224,205,1.612,207,2.349,208,3.334,211,1.537,212,1.524,227,1.747,232,2.037,233,1.402,240,1.224,253,2,265,1.792,269,1.224,270,1.224,273,1.402,277,1.725,279,1.747,282,2.689,303,1.747,304,1.747,305,1.747,419,1.921,426,1.623,435,3.115,437,2.317,439,3.115,441,2.702,442,2.317,443,2.317,446,2,466,1.623,468,1.921,481,3.409,482,1.623,483,2.317,484,3.196,485,2.741,486,3.685,487,3.385,488,2.741,489,2.372,490,2.741,491,2.317,492,2.317,493,2.317,494,2.317,495,2.372,496,1.921,497,2.372,498,1.921,499,1.921,500,1.623,501,2.741,502,1.921,503,1.921,504,1.921,505,1.921,506,1.921,507,2.372,508,1.921,509,2.372,510,2.372,511,2.372,512,2.741,513,1.921]],["title/components/UserRegistrationFormComponent.html",[0,0.064,63,0.432]],["body/components/UserRegistrationFormComponent.html",[0,0.091,1,0.367,2,0.815,3,0.429,4,0.367,5,0.65,6,0.65,7,0.65,8,0.65,9,0.367,11,0.65,12,1.446,13,0.815,15,0.929,17,0.929,19,0.429,20,0.71,22,0.826,23,0.05,24,1.038,25,0.946,26,0.836,30,1.175,32,0.885,33,0.367,34,0.429,35,0.429,36,0.65,37,0.929,38,0.929,39,0.65,40,1.183,41,0.65,42,0.829,43,0.65,44,0.367,45,0.57,46,1.183,47,0.367,48,0.497,49,0.367,50,0.497,51,0.367,52,0.497,53,0.367,54,0.57,55,0.65,56,0.367,57,0.57,58,0.65,59,0.367,60,1.148,61,0.429,62,0.929,63,0.667,64,1.011,65,0.367,66,0.57,67,0.57,68,0.65,69,0.65,70,0.029,71,0.029,108,0.65,110,1.072,111,1.072,114,2.568,147,1.055,148,1.231,152,1.395,153,1.183,154,0.929,155,1.343,156,0.929,160,0.65,161,0.65,163,0.929,164,1.343,173,1.742,191,1.219,192,2.217,193,2.345,204,1.219,205,1.609,207,2.345,211,1.532,212,1.521,227,1.742,232,2.032,233,1.395,240,1.219,253,1.994,265,1.787,266,2.032,267,2.032,269,1.219,270,1.219,277,1.721,279,1.742,282,2.685,303,1.742,304,1.742,305,1.742,319,2.538,426,1.616,435,3.11,437,2.31,439,3.11,441,2.695,442,2.31,443,2.31,446,1.994,466,1.616,481,3.405,482,1.616,483,2.31,484,3.188,485,2.732,486,1.912,488,2.732,490,2.732,491,2.31,492,2.31,493,2.31,494,2.31,496,1.912,498,1.912,499,1.912,500,1.616,501,2.732,502,1.912,503,1.912,504,1.912,505,1.912,506,1.912,508,1.912,512,2.732,513,1.912,514,4.295,515,3.374,516,2.361,517,2.361,518,3.374,519,2.361,520,2.361,521,3.374,522,3.478]],["title/injectables/UserRegistrationService.html",[205,0.986,523,1.646]],["body/injectables/UserRegistrationService.html",[3,0.709,4,0.199,9,0.199,13,0.199,14,1.037,19,0.233,22,0.854,23,0.05,24,0.829,26,0.746,29,0.877,30,1.15,32,0.671,33,0.199,34,0.233,35,0.487,42,1.015,48,0.654,50,0.654,52,0.914,60,1.092,61,0.487,64,0.383,70,0.018,71,0.018,72,0.956,90,1.037,132,2.602,135,2.179,152,1.016,153,1.073,154,0.58,156,0.738,160,1.294,161,1.294,163,1.435,168,0.956,170,2.099,196,1.441,205,0.746,211,2.331,212,1.923,213,2.125,214,1.441,215,2.971,216,3.451,222,2.886,236,0.877,257,1.441,265,2.234,266,1.087,267,1.087,273,2.179,276,0.757,277,2.097,279,1.384,280,1.835,290,1.835,311,3.215,411,1.705,424,3.299,436,1.705,446,2.908,457,1.705,472,2.514,491,2.125,492,2.971,493,1.441,494,3.426,523,1.244,524,1.281,525,3.299,526,0.877,527,2.106,528,2.106,529,2.106,530,2.106,531,3.105,532,2.106,533,2.106,534,2.106,535,2.106,536,2.106,537,2.106,538,2.681,539,1.281,540,4.071,541,1.281,542,2.106,543,2.106,544,2.171,545,2.106,546,2.106,547,1.705,548,1.705,549,2.106,550,2.681,551,2.106,552,1.281,553,5.162,554,3.105,555,2.106,556,1.281,557,2.106,558,1.281,559,2.106,560,2.106,561,2.106,562,2.106,563,2.106,564,1.281,565,3.897,566,2.106,567,1.281,568,2.106,569,2.106,570,3.105,571,2.106,572,1.281,573,3.688,574,3.105,575,2.106,576,2.106,577,1.281,578,2.514,579,4.071,580,2.681,581,3.688,582,2.106,583,1.281,584,2.106,585,2.106,586,2.106,587,2.106,588,1.281,589,2.681,590,2.106,591,1.281,592,2.681,593,2.106,594,1.281,595,2.106,596,3.105,597,1.281,598,3.105,599,2.106,600,1.281,601,2.106,602,1.281,603,2.106,604,1.281,605,1.281,606,2.106,607,1.281,608,1.281,609,1.281,610,4.448,611,2.106,612,1.037,613,1.281,614,1.037,615,1.037,616,0.877,617,1.037,618,1.281,619,1.281,620,1.281,621,2.106,622,2.681,623,3.897,624,2.106,625,4.541,626,4.341,627,3.688,628,4.341,629,2.971,630,4.341,631,4.341,632,4.341,633,4.341,634,2.681,635,1.281,636,1.281,637,2.681,638,2.681,639,2.171,640,2.681,641,2.681,642,2.681,643,2.681,644,2.681,645,2.681,646,2.106,647,1.281,648,2.106,649,1.281,650,1.281,651,1.281,652,1.281,653,1.281,654,1.281,655,1.281,656,1.281,657,1.281,658,1.281,659,1.281,660,1.281,661,1.281,662,1.281]],["title/components/WelcomePageComponent.html",[0,0.064,65,0.432]],["body/components/WelcomePageComponent.html",[0,0.098,1,0.42,2,0.897,3,0.492,4,0.42,5,0.745,6,0.745,7,0.745,8,0.745,9,0.42,11,0.745,12,1.481,13,0.835,15,1.022,17,1.022,19,0.492,20,0.781,22,0.675,23,0.049,27,3.006,30,1.154,32,0.829,33,0.42,34,0.492,35,0.492,36,0.745,37,1.022,38,1.022,39,0.745,40,1.256,41,0.745,42,0.892,43,0.745,44,0.42,45,0.654,46,1.256,47,0.42,48,0.57,49,0.42,50,0.57,51,0.42,52,0.57,53,0.42,54,0.654,55,0.745,56,0.42,57,0.654,58,0.745,59,0.576,60,0.96,61,0.919,62,1.022,63,0.576,64,0.869,65,0.708,66,1.299,67,1.024,68,0.745,69,0.745,70,0.032,71,0.032,72,1.685,108,0.745,114,1.916,115,3.006,118,3.378,147,1.161,148,1.325,152,1.022,154,1.022,155,1.426,156,0.745,160,0.745,161,0.745,163,1.167,164,1.543,191,2.657,206,3.27,240,2.354,247,3.121,295,2.9,319,2.194,327,1.853,330,1.853,334,1.853,338,2.9,339,1.853,340,1.853,341,1.853,342,2.541,343,1.853,350,1.853,351,1.853,353,1.599,359,1.853,360,1.853,361,1.853,372,3.006,376,1.853,483,3.121,522,3.006,663,3.996,664,2.192,665,4.237,666,3.712,667,4.778,668,4.778,669,2.707,670,2.707,671,2.707,672,2.707,673,2.707,674,2.707,675,2.707,676,2.707,677,3.712,678,2.707,679,2.707,680,3.712,681,2.707,682,2.707,683,2.707,684,2.707]],["title/coverage.html",[685,3.065]],["body/coverage.html",[0,0.127,1,0.547,9,0.547,10,2.853,22,0.641,23,0.049,44,0.547,47,0.547,49,0.547,51,0.547,53,0.547,56,0.547,59,0.547,61,0.803,63,0.547,64,0.803,65,0.547,70,0.038,71,0.038,114,2.279,116,2.412,118,2.412,125,1.819,126,1.819,127,1.819,128,2.412,130,2.082,145,2.853,146,2.608,174,2.853,185,2.853,189,2.853,205,1.248,212,1.563,218,3.562,353,2.082,377,3.729,393,2.853,394,2.853,431,2.853,432,2.853,481,3.022,482,3.022,523,2.082,525,3.022,526,3.022,616,2.412,629,2.412,663,2.853,664,2.853,685,2.853,686,3.523,687,3.523,688,3.523,689,3.523,690,4.821,691,3.523,692,3.523,693,3.523,694,3.523,695,3.523,696,3.523,697,3.523,698,3.523,699,3.523,700,4.414,701,4.414,702,3.523,703,3.523,704,2.853,705,3.575,706,5.053,707,2.853,708,3.575,709,2.853,710,2.853,711,3.523,712,3.523]],["title/dependencies.html",[75,1.977,713,1.597]],["body/dependencies.html",[23,0.049,33,0.639,70,0.042,71,0.042,75,2.433,92,3.93,93,3.322,113,3.335,122,1.87,612,3.335,714,4.118,715,5.604,716,4.118,717,3.93,718,4.118,719,4.118,720,4.118,721,4.118,722,4.118,723,4.118,724,4.118,725,4.118,726,4.118]],["title/index.html",[19,0.424,727,2.333,728,2.333]],["body/index.html",[0,0.114,4,0.574,13,0.574,23,0.039,28,3.99,42,0.779,67,0.894,70,0.039,71,0.039,83,1.91,147,1.157,214,2.532,227,1.91,254,2.532,276,2.186,329,3.678,425,2.996,500,3.373,548,3.684,578,2.996,629,2.532,639,2.996,713,2.532,717,2.996,729,3.699,730,4.55,731,3.699,732,4.928,733,2.996,734,3.699,735,4.55,736,5.278,737,5.444,738,3.699,739,3.699,740,3.699,741,3.699,742,3.699,743,3.699,744,3.699,745,4.928,746,3.699,747,5.141,748,3.699,749,3.699,750,3.699,751,4.55,752,4.55,753,5.141,754,3.699,755,4.55,756,3.699,757,3.699,758,3.699,759,3.699,760,4.55,761,3.699,762,3.699,763,3.699,764,3.699,765,3.699,766,4.928,767,3.699,768,2.532,769,3.699]],["title/modules.html",[74,1.954]],["body/modules.html",[23,0.043,70,0.043,71,0.043,73,2.598,74,2.269,80,2.269,93,3.009,547,3.56,770,4.396,771,4.396,772,5.041,773,4.396]],["title/overview.html",[768,2.591]],["body/overview.html",[1,0.848,2,0.909,23,0.049,44,0.771,47,0.771,49,0.771,51,0.771,53,0.771,56,0.771,59,0.771,63,0.771,65,0.771,70,0.039,71,0.039,73,3.414,74,1.943,75,2.717,76,3.048,77,3.048,78,3.048,79,3.048,80,2.563,81,3.724,82,3.048,83,1.943,377,2.577,523,2.224,768,2.577,774,3.764,775,3.764,776,3.764]],["title/properties.html",[20,0.704,713,1.597]],["body/properties.html",[20,0.937,23,0.046,70,0.043,71,0.043,733,3.604,777,4.451]],["title/routes.html",[121,2.237]],["body/routes.html",[23,0.044,70,0.044,71,0.044,121,2.646]],["title/miscellaneous/variables.html",[778,1.889,779,2.709]],["body/miscellaneous/variables.html",[13,0.608,19,0.712,22,0.975,23,0.049,24,0.946,25,2.1,26,1.856,29,2.68,70,0.04,71,0.04,153,1.078,158,2.021,212,1.789,277,1.887,314,3.224,315,2.68,525,2.68,526,3.224,544,3.171,614,3.171,615,3.171,616,3.224,617,3.171,704,3.171,705,4.244,707,3.171,708,3.171,709,3.814,710,3.814,778,3.171,779,3.171,780,3.915,781,4.71,782,3.915,783,3.915,784,3.915,785,3.915,786,4.71]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":377,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":777,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":351,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["0/1",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":776,"title":{},"body":{"overview.html":{}}}],["1.2",{"_index":382,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["1/1",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":775,"title":{},"body":{"overview.html":{}}}],["10/19",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["10/20",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":353,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["100px",{"_index":680,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["12px",{"_index":371,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["13.2.0",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["13.2.1",{"_index":717,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["14/16",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":356,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["150px",{"_index":369,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["15px",{"_index":359,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["16px",{"_index":331,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["1px",{"_index":336,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["2",{"_index":774,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":305,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["22",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["24px",{"_index":388,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["25",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["280px",{"_index":677,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["300px",{"_index":681,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["320px",{"_index":358,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["32px",{"_index":373,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["33",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["36px",{"_index":333,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["3px",{"_index":683,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["50",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":296,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["52",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["6.2",{"_index":505,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["7.5.0",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":343,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["87",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["actions",{"_index":383,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["actual_component",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["add",{"_index":214,"title":{},"body":{"components/MovieCardComponent.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["addfavoritemovie",{"_index":527,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["addfavoritemovie(movieid",{"_index":551,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["addtofavorites",{"_index":194,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["addtofavorites(movieid",{"_index":209,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["again",{"_index":661,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["alert",{"_index":473,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["align",{"_index":327,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["angular",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserRegistrationService.html":{}}}],["angular/compiler",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["angular/material/form",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["angular/platform",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"dependencies.html":{}}}],["api",{"_index":212,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":616,"title":{},"body":{"injectables/UserRegistrationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":73,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":80,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":379,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["array",{"_index":574,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["artifacts",{"_index":748,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":630,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["auto",{"_index":376,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["automatically",{"_index":741,"title":{},"body":{"index.html":{}}}],["available",{"_index":547,"title":{},"body":{"injectables/UserRegistrationService.html":{},"modules.html":{}}}],["back",{"_index":426,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["background",{"_index":339,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["bad",{"_index":657,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["bar",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["bearer",{"_index":631,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["between",{"_index":349,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["binds",{"_index":442,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["bio",{"_index":176,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["birth",{"_index":177,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["birthday",{"_index":267,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["body",{"_index":634,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["boolean",{"_index":243,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":334,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["born",{"_index":181,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["bottom",{"_index":335,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["brings",{"_index":502,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["browse",{"_index":772,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":747,"title":{},"body":{"index.html":{}}}],["button",{"_index":428,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["call",{"_index":211,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["calls",{"_index":503,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["cancel",{"_index":478,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["capabilities",{"_index":764,"title":{},"body":{"index.html":{}}}],["card",{"_index":149,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["card'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["card.component",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["card.component.html",{"_index":151,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["card.component.scss",{"_index":150,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["card.component.ts",{"_index":146,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:101",{"_index":251,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:117",{"_index":246,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:131",{"_index":252,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:141",{"_index":210,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:158",{"_index":256,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:173",{"_index":231,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:18",{"_index":159,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{}}}],["card.component.ts:186",{"_index":260,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:19",{"_index":186,"title":{},"body":{"components/GenreCardComponent.html":{}}}],["card.component.ts:22",{"_index":167,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["card.component.ts:23",{"_index":188,"title":{},"body":{"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["card.component.ts:28",{"_index":162,"title":{},"body":{"components/DescriptionCardComponent.html":{}}}],["card.component.ts:29",{"_index":187,"title":{},"body":{"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["card.component.ts:30",{"_index":175,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["card.component.ts:32",{"_index":263,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:33",{"_index":262,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:34",{"_index":264,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:38",{"_index":244,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:47",{"_index":229,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:63",{"_index":223,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:83",{"_index":249,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card/description",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"coverage.html":{}}}],["card/director",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"coverage.html":{}}}],["card/genre",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"coverage.html":{}}}],["card/movie",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["card:hover",{"_index":362,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["catcherror",{"_index":603,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["catcherror(this.handleerror",{"_index":625,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["center",{"_index":361,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["change",{"_index":639,"title":{},"body":{"injectables/UserRegistrationService.html":{},"index.html":{}}}],["changes",{"_index":480,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["check",{"_index":767,"title":{},"body":{"index.html":{}}}],["choice",{"_index":759,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["cli",{"_index":732,"title":{},"body":{"index.html":{}}}],["client",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["close",{"_index":173,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["cluster_appmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":276,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["collection",{"_index":554,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["color",{"_index":340,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["column",{"_index":370,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["command",{"_index":760,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"overview.html":{}}}],["console.error",{"_index":654,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["console.error('some",{"_index":651,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["console.log(result",{"_index":521,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["console.log(userdetails",{"_index":621,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["const",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["constructor",{"_index":156,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["constructor(data",{"_index":157,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{}}}],["constructor(dialog",{"_index":669,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["constructor(fetchapidata",{"_index":204,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["constructor(http",{"_index":539,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["constructor(private",{"_index":619,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["constructor(public",{"_index":675,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["contain",{"_index":386,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["content",{"_index":347,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["context",{"_index":709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["correctly",{"_index":447,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["coverage",{"_index":685,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":504,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["currentusersfaves",{"_index":190,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["cursor",{"_index":391,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["data",{"_index":153,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["data.bio",{"_index":180,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.birth",{"_index":182,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.death",{"_index":184,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.description",{"_index":172,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/GenreCardComponent.html":{}}}],["data.name",{"_index":179,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{}}}],["data.service",{"_index":270,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["data.service.ts",{"_index":526,"title":{},"body":{"injectables/UserRegistrationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data.service.ts:114",{"_index":588,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:132",{"_index":594,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:15",{"_index":541,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:150",{"_index":583,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:168",{"_index":552,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:191",{"_index":556,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:214",{"_index":564,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:237",{"_index":558,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:250",{"_index":597,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:29",{"_index":602,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:41",{"_index":600,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:52",{"_index":572,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:68",{"_index":567,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:78",{"_index":591,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:96",{"_index":577,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.title",{"_index":171,"title":{},"body":{"components/DescriptionCardComponent.html":{}}}],["database",{"_index":224,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["date",{"_index":454,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["date:'longdate",{"_index":423,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["date:\\'longdate",{"_index":430,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["death",{"_index":178,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["declarations",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["declares",{"_index":614,"title":{},"body":{"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":165,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/UpdateInfoComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultthrottleconfig",{"_index":271,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["defined",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["delete",{"_index":559,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["deleted",{"_index":562,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["deletefavoritemovie",{"_index":528,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["deletefavoritemovie(movieid",{"_index":555,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["deleteuser",{"_index":529,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["deleteuser(username",{"_index":557,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["dependencies",{"_index":75,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["descriptioncardcomponent",{"_index":44,"title":{"components/DescriptionCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["determine",{"_index":238,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["dev",{"_index":739,"title":{},"body":{"index.html":{}}}],["development",{"_index":734,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":191,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["dialogref",{"_index":435,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["died",{"_index":183,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["directed",{"_index":321,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["direction",{"_index":344,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["directive",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directives",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":746,"title":{},"body":{"index.html":{}}}],["director",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["directorcardcomponent",{"_index":47,"title":{"components/DirectorCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directorname",{"_index":580,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["directors",{"_index":635,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["directory",{"_index":750,"title":{},"body":{"index.html":{}}}],["disfavored",{"_index":259,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["display",{"_index":240,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["dist",{"_index":749,"title":{},"body":{"index.html":{}}}],["div",{"_index":366,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["documentation",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["duration",{"_index":304,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["dynamic",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":757,"title":{},"body":{"index.html":{}}}],["each",{"_index":237,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["edit",{"_index":411,"title":{},"body":{"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["edituser",{"_index":436,"title":{},"body":{"components/UpdateInfoComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["edituser(userdetails",{"_index":563,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["element",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["email",{"_index":266,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["empty",{"_index":457,"title":{},"body":{"components/UpdateInfoComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["end",{"_index":329,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"index.html":{}}}],["endpoint",{"_index":213,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["entered",{"_index":488,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["entire",{"_index":545,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["environment",{"_index":705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["erase",{"_index":458,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["error",{"_index":598,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["error.error",{"_index":648,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["error.error.message",{"_index":653,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["error.status",{"_index":655,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["errorevent",{"_index":650,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["exampleuser",{"_index":561,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["execute",{"_index":755,"title":{},"body":{"index.html":{}}}],["explanatory",{"_index":645,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["export",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["exports",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["extract",{"_index":640,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["extraction",{"_index":571,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["extractresponsedata",{"_index":530,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["extractresponsedata(res",{"_index":566,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["false",{"_index":315,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"miscellaneous/variables.html":{}}}],["fav",{"_index":389,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["fave",{"_index":241,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["favored",{"_index":221,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["favorite",{"_index":235,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["favorite_border",{"_index":324,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["favoritemovies",{"_index":268,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["favorites",{"_index":216,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["fetch",{"_index":269,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["fetchapidata",{"_index":192,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["field",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"components/UpdateInfoComponent.html":{}}}],["fields",{"_index":477,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["files",{"_index":743,"title":{},"body":{"index.html":{}}}],["fill",{"_index":476,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["first",{"_index":762,"title":{},"body":{"index.html":{}}}],["fit",{"_index":385,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["flex",{"_index":326,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["form",{"_index":483,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form.component",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"components/WelcomePageComponent.html":{}}}],["form.component.html",{"_index":485,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.scss",{"_index":484,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":482,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:24",{"_index":487,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:25",{"_index":515,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:27",{"_index":497,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:28",{"_index":496,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:29",{"_index":498,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:30",{"_index":519,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:32",{"_index":495,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:33",{"_index":516,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:40",{"_index":489,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:41",{"_index":517,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form/user",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["formsmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":278,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["function",{"_index":232,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["funtion",{"_index":620,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["further",{"_index":765,"title":{},"body":{"index.html":{}}}],["gap",{"_index":332,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["generate",{"_index":745,"title":{},"body":{"index.html":{}}}],["generated",{"_index":731,"title":{},"body":{"index.html":{}}}],["genre",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["genrecardcomponent",{"_index":49,"title":{"components/GenreCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["genrename",{"_index":589,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["genres",{"_index":636,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getallmovies",{"_index":531,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getdirector",{"_index":532,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getdirector(directorname",{"_index":576,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getfavorites",{"_index":533,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getfavorites(username",{"_index":582,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getgenre",{"_index":534,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getgenre(genrename",{"_index":587,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getmovie",{"_index":535,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getmovie(movieid",{"_index":590,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getmoviesandfaves",{"_index":195,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["gets",{"_index":253,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["getting",{"_index":727,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":196,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["getuser(username",{"_index":593,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["given",{"_index":581,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["go",{"_index":425,"title":{},"body":{"components/ProfileViewComponent.html":{},"index.html":{}}}],["gotomoviecard",{"_index":398,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["graph",{"_index":773,"title":{},"body":{"modules.html":{}}}],["greeting",{"_index":364,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["grid",{"_index":378,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["handleerror",{"_index":536,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["handleerror(error",{"_index":595,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["happened",{"_index":658,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["header",{"_index":325,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["header:hover",{"_index":352,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["headers",{"_index":628,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["height",{"_index":381,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["help",{"_index":766,"title":{},"body":{"index.html":{}}}],["here",{"_index":542,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["html",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["http",{"_index":550,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["http://localhost:4200",{"_index":740,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":540,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["httpclientmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":596,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["httpheaders",{"_index":610,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["https://cfmovieapp.herokuapp.com",{"_index":617,"title":{},"body":{"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":242,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["icon:hover",{"_index":390,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["identifier",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["if(moviearray.some(movie",{"_index":313,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["img",{"_index":384,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["implements",{"_index":147,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["import",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["imports",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["includes",{"_index":219,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["including",{"_index":492,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["info'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["info.component",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileViewComponent.html":{}}}],["info.component.html",{"_index":434,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.scss",{"_index":433,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts",{"_index":432,"title":{},"body":{"components/UpdateInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:22",{"_index":440,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:25",{"_index":452,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:26",{"_index":451,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:27",{"_index":453,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:29",{"_index":450,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:37",{"_index":449,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info.component.ts:44",{"_index":445,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["info/update",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"coverage.html":{}}}],["information",{"_index":424,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["inject",{"_index":168,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["inject(mat_dialog_data",{"_index":166,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{}}}],["injectable",{"_index":523,"title":{"injectables/UserRegistrationService.html":{}},"body":{"injectables/UserRegistrationService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":524,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["input",{"_index":443,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["inputs",{"_index":437,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["instanceof",{"_index":649,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["instead",{"_index":607,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["items",{"_index":328,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["itisafave",{"_index":197,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["itisafave(movieid",{"_index":230,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["json",{"_index":491,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["json.parse(user",{"_index":642,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["json.parse(userdata).username",{"_index":283,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["json.stringify(resp",{"_index":469,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["json.stringify(result.user",{"_index":511,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["justify",{"_index":346,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["jwt",{"_index":493,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["karma",{"_index":756,"title":{},"body":{"index.html":{}}}],["key",{"_index":584,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["later",{"_index":662,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["legend",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["line",{"_index":380,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["lines",{"_index":637,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["links",{"_index":365,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["list",{"_index":354,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["literal",{"_index":158,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/UpdateInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":279,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["localstorage.clear",{"_index":317,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["localstorage.getitem('token",{"_index":626,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["localstorage.getitem('user",{"_index":280,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["localstorage.setitem('token",{"_index":509,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["localstorage.setitem('user",{"_index":468,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["login",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["loginuser",{"_index":486,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["longer",{"_index":258,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["make",{"_index":573,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["makes",{"_index":446,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["making",{"_index":546,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["map",{"_index":613,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["map(this.extractresponsedata",{"_index":633,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["margin",{"_index":338,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["mat",{"_index":367,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["mat_dialog_data",{"_index":169,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{}}}],["matbuttonmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":206,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["matdialogmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":439,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["matformfieldmodule",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":207,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["matsnackbarmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":357,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["methods",{"_index":154,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["miscellaneous",{"_index":778,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":508,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["module",{"_index":72,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["modules",{"_index":74,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["monitor",{"_index":234,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["more",{"_index":578,"title":{},"body":{"injectables/UserRegistrationService.html":{},"index.html":{}}}],["movie",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["movie._id",{"_index":301,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["movie.director.name",{"_index":322,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["movie.title",{"_index":320,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["moviearray",{"_index":312,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["moviecardcomponent",{"_index":51,"title":{"components/MovieCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["movieid",{"_index":222,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["movieids",{"_index":586,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["movies",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["myflix",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/WelcomePageComponent.html":{}}}],["myflixangularclient",{"_index":729,"title":{},"body":{"index.html":{}}}],["name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["navigate",{"_index":254,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"index.html":{}}}],["need",{"_index":761,"title":{},"body":{"index.html":{}}}],["needed",{"_index":638,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["new",{"_index":629,"title":{},"body":{"injectables/UserRegistrationService.html":{},"coverage.html":{},"index.html":{}}}],["newdata",{"_index":438,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["newly",{"_index":220,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["ng",{"_index":737,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":155,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["non",{"_index":568,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["note",{"_index":605,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["notifications",{"_index":506,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["null",{"_index":281,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{}}}],["object",{"_index":277,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":575,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["observable",{"_index":553,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["occurred",{"_index":652,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["ok",{"_index":303,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["one",{"_index":592,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["oninit",{"_index":148,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["opacity",{"_index":342,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["opacity:100",{"_index":363,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["open",{"_index":247,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["opendescription",{"_index":198,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["opendescription(name",{"_index":245,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["opendirector",{"_index":199,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["opendirector(name",{"_index":248,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["opengenre",{"_index":200,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["opengenre(name",{"_index":250,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["openprofile",{"_index":201,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["openupdateinfocard",{"_index":399,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["openuserlogindialog",{"_index":667,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["openuserregistrationdialog",{"_index":668,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["optional",{"_index":161,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["out",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":374,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["overview",{"_index":768,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":713,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":330,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["page",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["page.component",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.html",{"_index":666,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.scss",{"_index":665,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts",{"_index":664,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:16",{"_index":670,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:17",{"_index":674,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:18",{"_index":671,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:24",{"_index":673,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:33",{"_index":672,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page/welcome",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["panel",{"_index":427,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["panel:hover",{"_index":429,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["param",{"_index":170,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["parameters",{"_index":160,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["params",{"_index":543,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["particular",{"_index":579,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["password",{"_index":441,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["path",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["pipe",{"_index":632,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["platform",{"_index":758,"title":{},"body":{"index.html":{}}}],["please",{"_index":659,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["pointer",{"_index":392,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["poster",{"_index":368,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["prefix",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["prevent",{"_index":455,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["previous",{"_index":459,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["previousfaveswithdisfavoredmovieremoved",{"_index":307,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["private",{"_index":273,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["production",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["profileviewcomponent",{"_index":53,"title":{"components/ProfileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":730,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"properties.html":{}}}],["provide",{"_index":544,"title":{},"body":{"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":618,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["providers",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":152,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["radius",{"_index":682,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["receives",{"_index":490,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["recorded",{"_index":287,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["redirectto",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":769,"title":{},"body":{"index.html":{}}}],["register",{"_index":518,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registeruser",{"_index":514,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registration",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["reload",{"_index":742,"title":{},"body":{"index.html":{}}}],["remove",{"_index":257,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["removefromfavorites",{"_index":202,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["removefromfavorites(movieid",{"_index":255,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["replace",{"_index":460,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["require",{"_index":710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":290,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["reset",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resp",{"_index":286,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["response",{"_index":570,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["rest",{"_index":644,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["result",{"_index":513,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["result.token",{"_index":510,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["results",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":311,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["returns",{"_index":163,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["revises",{"_index":217,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["root'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["router",{"_index":208,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["routermodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":121,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":345,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["run",{"_index":736,"title":{},"body":{"index.html":{}}}],["running",{"_index":751,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":612,"title":{},"body":{"injectables/UserRegistrationService.html":{},"dependencies.html":{}}}],["rxjs/internal/operators",{"_index":604,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["rxjs/internal/operators/throttle",{"_index":272,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["rxjs/operators",{"_index":606,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["save",{"_index":479,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["scaffolding",{"_index":744,"title":{},"body":{"index.html":{}}}],["seems",{"_index":608,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["self",{"_index":387,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["sending",{"_index":456,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["serve",{"_index":738,"title":{},"body":{"index.html":{}}}],["server",{"_index":735,"title":{},"body":{"index.html":{}}}],["set",{"_index":226,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["sets",{"_index":225,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["sign",{"_index":319,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["signout",{"_index":203,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["signs",{"_index":261,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["snackbar",{"_index":193,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["solid",{"_index":337,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["something",{"_index":656,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["space",{"_index":348,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["spec\\.ts",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fetch",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/description",{"_index":145,"title":{},"body":{"components/DescriptionCardComponent.html":{},"coverage.html":{}}}],["src/app/director",{"_index":174,"title":{},"body":{"components/DirectorCardComponent.html":{},"coverage.html":{}}}],["src/app/fetch",{"_index":525,"title":{},"body":{"injectables/UserRegistrationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/genre",{"_index":185,"title":{},"body":{"components/GenreCardComponent.html":{},"coverage.html":{}}}],["src/app/movie",{"_index":189,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{}}}],["src/app/profile",{"_index":393,"title":{},"body":{"components/ProfileViewComponent.html":{},"coverage.html":{}}}],["src/app/update",{"_index":431,"title":{},"body":{"components/UpdateInfoComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":481,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/welcome",{"_index":663,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":728,"title":{"index.html":{}},"body":{}}],["statements",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":236,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["stored",{"_index":227,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["submitted",{"_index":448,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["submitting",{"_index":474,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["success",{"_index":501,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["successful",{"_index":560,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["successfully",{"_index":471,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["support",{"_index":770,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":771,"title":{},"body":{"modules.html":{}}}],["synopsis",{"_index":323,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["table",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["test",{"_index":754,"title":{},"body":{"index.html":{}}}],["testing",{"_index":763,"title":{},"body":{"index.html":{}}}],["tests",{"_index":753,"title":{},"body":{"index.html":{}}}],["text",{"_index":360,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["this.currentusersfaves",{"_index":309,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.currentusersfaves.filter(movie",{"_index":308,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.currentusersfaves.push(movie",{"_index":293,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.dialog.open(descriptioncardcomponent",{"_index":298,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.dialog.open(directorcardcomponent",{"_index":294,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.dialog.open(genrecardcomponent",{"_index":297,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.dialog.open(updateinfocomponent",{"_index":420,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["this.dialog.open(userloginformcomponent",{"_index":678,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialog.open(userregistrationformcomponent",{"_index":676,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialogref.close",{"_index":466,"title":{},"body":{"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.fetchapidata.addfavoritemovie(movieid).subscribe((resp",{"_index":300,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.fetchapidata.deletefavoritemovie(movieid).subscribe((resp",{"_index":306,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.fetchapidata.edituser(this.newdata).subscribe((resp",{"_index":465,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["this.fetchapidata.getallmovies().subscribe((res",{"_index":288,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.fetchapidata.getuser(username).subscribe((resp",{"_index":284,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.fetchapidata.userlogin(this.userdata).subscribe((result",{"_index":507,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.fetchapidata.userregistration(this.userdata).subscribe((result",{"_index":520,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.getmoviesandfaves",{"_index":275,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.getuser",{"_index":274,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.http",{"_index":549,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["this.http.delete(apiurl",{"_index":646,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["this.http.get(apiurl",{"_index":627,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["this.http.post(apiurl",{"_index":622,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["this.http.put(apiurl",{"_index":647,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["this.movies",{"_index":289,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.movies.foreach((movie",{"_index":291,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.newdata.birthday",{"_index":464,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["this.newdata.email",{"_index":463,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["this.newdata.password",{"_index":462,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["this.newdata.username",{"_index":461,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["this.router.navigate(['/profile",{"_index":299,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.router.navigate(['movies",{"_index":419,"title":{},"body":{"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["this.router.navigate(['welcome",{"_index":316,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.snackbar.open('added",{"_index":302,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.snackbar.open('data",{"_index":470,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["this.snackbar.open('plase",{"_index":475,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["this.snackbar.open('removed",{"_index":310,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.snackbar.open(result",{"_index":512,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.user",{"_index":285,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.user.favoritemovies",{"_index":228,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["this.user.favoritemovies.includes(movie._id",{"_index":292,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["throwerror",{"_index":611,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["token",{"_index":494,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["top",{"_index":372,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["transition",{"_index":350,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["true",{"_index":314,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":660,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["tslib",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":569,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["unit",{"_index":752,"title":{},"body":{"index.html":{}}}],["up",{"_index":522,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["update",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["updated",{"_index":472,"title":{},"body":{"components/UpdateInfoComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["updateinfocomponent",{"_index":56,"title":{"components/UpdateInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["url",{"_index":615,"title":{},"body":{"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":500,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"index.html":{}}}],["used",{"_index":233,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["user",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["user's",{"_index":215,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["user.birthday",{"_index":422,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["user.email",{"_index":421,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["user.username",{"_index":318,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["userdata",{"_index":282,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["userdetails",{"_index":565,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["userdetails).pipe",{"_index":624,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["userlogin",{"_index":537,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["userlogin(userdetails",{"_index":599,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["userloginformcomponent",{"_index":59,"title":{"components/UserLoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":265,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["userobject",{"_index":641,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["userobject.username",{"_index":643,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["userregistration",{"_index":538,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["userregistration(userdetails",{"_index":601,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["userregistrationformcomponent",{"_index":63,"title":{"components/UserRegistrationFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userregistrationservice",{"_index":205,"title":{"injectables/UserRegistrationService.html":{}},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{}}}],["users",{"_index":623,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":444,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["var",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["variable",{"_index":218,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"coverage.html":{}}}],["variables",{"_index":779,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":733,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":548,"title":{},"body":{"injectables/UserRegistrationService.html":{},"index.html":{}}}],["view",{"_index":395,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["view.component",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["view.component.html",{"_index":397,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.scss",{"_index":396,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts",{"_index":394,"title":{},"body":{"components/ProfileViewComponent.html":{},"coverage.html":{}}}],["view.component.ts:107",{"_index":408,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:125",{"_index":409,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:141",{"_index":407,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:151",{"_index":401,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:168",{"_index":412,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:183",{"_index":405,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:196",{"_index":413,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:24",{"_index":416,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:25",{"_index":418,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:31",{"_index":400,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:35",{"_index":415,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:37",{"_index":417,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:38",{"_index":414,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:43",{"_index":406,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:53",{"_index":403,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:69",{"_index":402,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:85",{"_index":404,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view.component.ts:93",{"_index":410,"title":{},"body":{"components/ProfileViewComponent.html":{}}}],["view/profile",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileViewComponent.html":{},"coverage.html":{}}}],["void",{"_index":164,"title":{},"body":{"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["welcome",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["welcomepagecomponent",{"_index":65,"title":{"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DescriptionCardComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/UpdateInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["whether",{"_index":239,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["white",{"_index":341,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["whose",{"_index":585,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["width",{"_index":295,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{},"components/WelcomePageComponent.html":{}}}],["window",{"_index":679,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["window.location.reload",{"_index":467,"title":{},"body":{"components/UpdateInfoComponent.html":{}}}],["window:hover",{"_index":684,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["work",{"_index":609,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["wrap",{"_index":355,"title":{},"body":{"components/MovieCardComponent.html":{},"components/ProfileViewComponent.html":{}}}],["x",{"_index":375,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["you'll",{"_index":499,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["zone.js",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'myFlix-Angular-client'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'myFlix-Angular-client';\n}\n    \n\n    \n        \n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DescriptionCardComponent', 'selector': 'app-description-card'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDescriptionCardComponent\n\nDescriptionCardComponent\n\nAppModule -->\n\nDescriptionCardComponent->AppModule\n\n\n\n\n\nDirectorCardComponent\n\nDirectorCardComponent\n\nAppModule -->\n\nDirectorCardComponent->AppModule\n\n\n\n\n\nGenreCardComponent\n\nGenreCardComponent\n\nAppModule -->\n\nGenreCardComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nProfileViewComponent\n\nProfileViewComponent\n\nAppModule -->\n\nProfileViewComponent->AppModule\n\n\n\n\n\nUpdateInfoComponent\n\nUpdateInfoComponent\n\nAppModule -->\n\nUpdateInfoComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DescriptionCardComponent\n                        \n                        \n                            DirectorCardComponent\n                        \n                        \n                            GenreCardComponent\n                        \n                        \n                            MovieCardComponent\n                        \n                        \n                            ProfileViewComponent\n                        \n                        \n                            UpdateInfoComponent\n                        \n                        \n                            UserLoginFormComponent\n                        \n                        \n                            UserRegistrationFormComponent\n                        \n                        \n                            WelcomePageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FormsModule } from '@angular/forms';\nimport { UserRegistrationFormComponent } from './user-registration-form/user-registration-form.component';\nimport { UserLoginFormComponent } from './user-login-form/user-login-form.component';\nimport { MovieCardComponent } from './movie-card/movie-card.component';\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatIconModule } from '@angular/material/icon';\nimport { GenreCardComponent } from './genre-card/genre-card.component';\nimport { DirectorCardComponent } from './director-card/director-card.component';\nimport { DescriptionCardComponent } from './description-card/description-card.component';\nimport { ProfileViewComponent } from './profile-view/profile-view.component';\nimport { UpdateInfoComponent } from './update-info/update-info.component';\n\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomePageComponent },\n  { path: 'movies', component: MovieCardComponent },\n  { path: 'profile', component: ProfileViewComponent },\n  { path: '', redirectTo: 'welcome', pathMatch: 'prefix' },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserRegistrationFormComponent,\n    UserLoginFormComponent,\n    MovieCardComponent,\n    WelcomePageComponent,\n    GenreCardComponent,\n    DirectorCardComponent,\n    DescriptionCardComponent,\n    ProfileViewComponent,\n    UpdateInfoComponent\n  ],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatIconModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DescriptionCardComponent.html":{"url":"components/DescriptionCardComponent.html","title":"component - DescriptionCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DescriptionCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/description-card/description-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-description-card\n            \n\n            \n                styleUrls\n                ./description-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./description-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/description-card/description-card.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/description-card/description-card.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/description-card/description-card.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-description-card',\n  templateUrl: './description-card.component.html',\n  styleUrls: ['./description-card.component.scss']\n})\n\n/**\n *\n * @param data\n */\nexport class DescriptionCardComponent implements OnInit {\n\n    constructor(\n      @Inject(MAT_DIALOG_DATA)\n      public data: {\n        Title: string;\n        Description: string;\n      }\n    ) { }\n  \n    ngOnInit(): void {\n    }\n  \n  }\n    \n\n    \n        \n    \n      \n        {{data.Title}}\n      \n      \n        {{data.Description}}\n      \n      \n        Close\n      \n    \n\n    \n\n    \n                \n                    ./description-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{data.Title}}                    {{data.Description}}                    Close          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DescriptionCardComponent', 'selector': 'app-description-card'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DescriptionCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectorCardComponent.html":{"url":"components/DirectorCardComponent.html","title":"component - DirectorCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectorCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/director-card/director-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-director-card\n            \n\n            \n                styleUrls\n                ./director-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./director-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/director-card/director-card.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/director-card/director-card.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/director-card/director-card.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-director-card',\n  templateUrl: './director-card.component.html',\n  styleUrls: ['./director-card.component.scss']\n})\n\n/**\n *\n * @param data\n */\nexport class DirectorCardComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      Name: string;\n      Bio: string;\n      Birth: string;\n      Death: string;\n    }\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n    \n\n    \n        \n    \n      \n        {{data.Name}}\n      \n      \n        {{data.Bio}}\n      \n      \n        Born: {{data.Birth}}\n      \n      \n        Died: {{data.Death}}\n      \n      \n        Close\n      \n    \n  \n    \n\n    \n                \n                    ./director-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{data.Name}}                    {{data.Bio}}                    Born: {{data.Birth}}                    Died: {{data.Death}}                    Close            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DescriptionCardComponent', 'selector': 'app-description-card'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectorCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenreCardComponent.html":{"url":"components/GenreCardComponent.html","title":"component - GenreCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GenreCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/genre-card/genre-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-genre-card\n            \n\n            \n                styleUrls\n                ./genre-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./genre-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/genre-card/genre-card.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/genre-card/genre-card.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/genre-card/genre-card.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-genre-card',\n  templateUrl: './genre-card.component.html',\n  styleUrls: ['./genre-card.component.scss']\n})\n\n/**\n *\n * @param data\n */\nexport class GenreCardComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      Name: string;\n      Description: string;\n    }\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n    \n\n    \n        \n    \n      \n        {{data.Name}}\n      \n      \n        {{data.Description}}\n      \n      \n        Close\n      \n    \n\n    \n\n    \n                \n                    ./genre-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  {{data.Name}}                    {{data.Description}}                    Close          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DescriptionCardComponent', 'selector': 'app-description-card'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenreCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MovieCardComponent.html":{"url":"components/MovieCardComponent.html","title":"component - MovieCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MovieCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/movie-card/movie-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-movie-card\n            \n\n            \n                styleUrls\n                ./movie-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./movie-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUsersFaves\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                movies\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToFavorites\n                            \n                            \n                                getMoviesAndFaves\n                            \n                            \n                                getUser\n                            \n                            \n                                itIsAFave\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDescription\n                            \n                            \n                                openDirector\n                            \n                            \n                                openGenre\n                            \n                            \n                                openProfile\n                            \n                            \n                                removeFromFavorites\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialog: MatDialog, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/movie-card/movie-card.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToFavorites\n                        \n                    \n                \n            \n            \n                \naddToFavorites(movieId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:141\n                \n            \n\n\n            \n                \n                    call API endpoint to add a movie to user's favorites. Also revises the currentUsersFaves variable so that it\nincludes the newly favored movie.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMoviesAndFaves\n                        \n                    \n                \n            \n            \n                \ngetMoviesAndFaves()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:63\n                \n            \n\n\n            \n                \n                    call API endpoint to get all the movies in the database, then sets the currentUsersFaves variable to the set of movies that are stored\nas favorites in this.user.FavoriteMovies.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:47\n                \n            \n\n\n            \n                \n                    call API endpoint to get user info\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itIsAFave\n                        \n                    \n                \n            \n            \n                \nitIsAFave(movieId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:173\n                \n            \n\n\n            \n                \n                    function used to monitor the favorite status of each movie. This is used to determine whether to display the fave icon or\nthe not-fave icon.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDescription\n                        \n                    \n                \n            \n            \n                \nopenDescription(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:117\n                \n            \n\n\n            \n                \n                    open a dialog to display the DescriptionCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDirector\n                        \n                    \n                \n            \n            \n                \nopenDirector(name: string, bio: string, birth: string, death: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:83\n                \n            \n\n\n            \n                \n                    open a dialog to display the DirectorCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bio\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    birth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    death\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGenre\n                        \n                    \n                \n            \n            \n                \nopenGenre(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:101\n                \n            \n\n\n            \n                \n                    open a dialog to display the GenreCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfile\n                        \n                    \n                \n            \n            \n                \nopenProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:131\n                \n            \n\n\n            \n                \n                    function that gets the router to navigate to the profile page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromFavorites\n                        \n                    \n                \n            \n            \n                \nremoveFromFavorites(movieId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:158\n                \n            \n\n\n            \n                \n                    call API endpoint to remove a movie from user's favorites. Also revises the currentUsersFaves variable so that it\nno longer includes the disfavored movie.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:186\n                \n            \n\n\n            \n                \n                    function that gets the router to navigate to the welcome page when a user signs out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUsersFaves\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    Username: '',\n    Email: '',\n    Birthday: '',\n    FavoriteMovies: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserRegistrationService } from '../fetch-api-data.service'\nimport { DirectorCardComponent } from '../director-card/director-card.component';\nimport { GenreCardComponent } from '../genre-card/genre-card.component';\nimport { DescriptionCardComponent } from '../description-card/description-card.component';\nimport { defaultThrottleConfig } from 'rxjs/internal/operators/throttle';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss']\n})\n\nexport class MovieCardComponent {\n  movies: any[] = [];\n  user: any = {\n    Username: '',\n    Email: '',\n    Birthday: '',\n    FavoriteMovies: [],\n  }\n  currentUsersFaves: any[] =[];\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialog: MatDialog,\n    public snackBar: MatSnackBar,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.getUser();\n    this.getMoviesAndFaves();\n  };\n\n  /**\n   * call API endpoint to get user info\n   * @function getUser\n   */\n  getUser() {\n    // this code sets the user object to the user found in localStorage\n    if (localStorage.getItem('user') != null) {\n      let userData: any = localStorage.getItem('user');\n      let username = JSON.parse(userData).Username;\n      this.fetchApiData.getUser(username).subscribe((resp: any) => {\n        this.user = resp;\n      });\n    };\n  }\n\n  /**\n   * call API endpoint to get all the movies in the database, then sets the currentUsersFaves variable to the set of movies that are stored\n   * as favorites in this.user.FavoriteMovies.\n   * @function getMoviesAndFaves\n   */\n  getMoviesAndFaves() {\n    // this code sets the currentUsersFaves variable to the set of movies that the database has recorded as favorites for the user.\n    this.fetchApiData.getAllMovies().subscribe((res: any) => {\n      this.movies = res;\n      this.movies.forEach((movie) => {\n        if (this.user.FavoriteMovies.includes(movie._id)) {\n          this.currentUsersFaves.push(movie);\n        }\n      });\n    });\n  }\n\n  /**\n   * open a dialog to display the DirectorCardComponent\n   * @module openDirector\n   * @param name {string}\n   * @param bio {string}\n   * @param birth {string}\n   * @param death {string}\n   */\n  openDirector(name: string, bio: string, birth: string, death: string): void {\n    this.dialog.open(DirectorCardComponent, {\n      data: {\n        Name: name,\n        Bio: bio,\n        Birth: birth,\n        Death: death,\n      },\n      width: '500px'\n    });\n  }\n\n  /**\n   * open a dialog to display the GenreCardComponent\n   * @module openGenre\n   * @param name {string}\n   * @param description {string}\n   */\n  openGenre(name: string, description: string): void {\n    this.dialog.open(GenreCardComponent, {\n      data: {\n        Name: name,\n        Description: description,\n      },\n      width: '500px'\n    });\n  }\n\n  /**\n   * open a dialog to display the DescriptionCardComponent\n   * @module openDescription\n   * @param name {string}\n   * @param description {string}\n   */\n  openDescription(name: string, description: string): void {\n    this.dialog.open(DescriptionCardComponent, {\n      data: {\n        Title: name,\n        Description: description,\n      },\n      width: '500px'\n    });\n  }\n\n  /**\n   * function that gets the router to navigate to the profile page.\n   * @function openProfile\n   */\n  openProfile(): void {\n    this.router.navigate(['/profile']);\n  }\n\n  /**\n   * call API endpoint to add a movie to user's favorites. Also revises the currentUsersFaves variable so that it \n   * includes the newly favored movie.\n   * @function addToFavorites\n   * @param movieId {string}\n   */\n  addToFavorites(movieId: string): void {\n    this.fetchApiData.addFavoriteMovie(movieId).subscribe((resp: any) => {\n      this.movies.forEach((movie) => {\n        if (movie._id == movieId) {\n          this.currentUsersFaves.push(movie);\n        }\n      });\n      this.snackBar.open('Added to favorites', 'OK', { duration: 2000 });\n    });\n  }\n\n  /**\n   * call API endpoint to remove a movie from user's favorites. Also revises the currentUsersFaves variable so that it \n   * no longer includes the disfavored movie.\n   * @function removeFromFavorites\n   * @param movieId {string}\n   */\n  removeFromFavorites(movieId: string): void {\n    this.fetchApiData.deleteFavoriteMovie(movieId).subscribe((resp: any) => {\n      const previousFavesWithDisfavoredMovieRemoved = this.currentUsersFaves.filter(movie => movie._id !== movieId);\n      this.currentUsersFaves = previousFavesWithDisfavoredMovieRemoved;\n      this.snackBar.open('Removed from favorites', 'OK', { duration: 2000 });\n    })\n  }\n\n  /**\n   * function used to monitor the favorite status of each movie. This is used to determine whether to display the fave icon or\n   * the not-fave icon.\n   * @function itIsAFave\n   * @param movieId {string}\n   * @return Boolean\n   */\n  itIsAFave(movieId: string): any {\n    const movieArray: any[] = this.currentUsersFaves;\n    if(movieArray.some(movie => movie._id === movieId)){\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * function that gets the router to navigate to the welcome page when a user signs out.\n   * @function signOut\n   */\n  signOut(): void {\n    this.router.navigate(['welcome']);\n    localStorage.clear();\n  }\n}\n    \n\n    \n        \n  \n    \n      Welcome {{user.Username}}!\n    \n    \n      \n        Profile\n      \n      \n        Sign Out\n      \n    \n  \n  \n    \n      \n        {{movie.Title}}\n        Directed by: {{movie.Director.Name}}\n      \n      \n      \n        \n          Genre\n        \n        \n          Director\n        \n        \n          Synopsis\n        \n        favorite\n        favorite_border\n      \n    \n  \n\n    \n\n    \n                \n                    ./movie-card.component.scss\n                \n                header {\n  display: flex;\n  align-items: flex-end;\n  padding: 16px;\n  gap: 36px;\n  border-bottom: 1px solid;\n  margin-bottom: 16px;\n  background-color: white;\n  opacity: 80%;\n  flex-direction: row;\n  justify-content: space-between;\n  transition: 0.3s;\n}\n  \nheader:hover {\n  opacity: 100%;\n}\n\n.favorites-list {\n  flex-wrap: wrap;\n}\n\n.movie-card {\n  width: 15%;\n  max-width: 320px;\n  margin: 15px 15px;\n  padding: 15px 15px;\n  opacity: 80%;\n  text-align: center;\n  transition: 0.3s;\n}\n\n.movie-card:hover {\n  opacity:100%;\n}\n\n.greeting {\n  text-align: center;\n}\n\n.header-links-div {\n  display: flex;\n  justify-content: flex-end;\n  flex-direction: row;\n}\n\nmat-card-header {\n  display: flex;\n  justify-content: center;\n}\n\n.movie-poster {\n  width: 150px;\n}\n\n.favorites-list {\n  display: flex;\n  column-gap: 12px;\n  padding-top: 32px;\n  overflow-x: auto;\n  padding-top: 0;\n}\n\n.mat-card-title {\n  grid-area: title;\n  line-height: 1.2;\n}\n\n.mat-card-actions {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  row-gap: 16px;\n  grid-area: actions;\n}\n\nimg {\n  grid-area: img;\n  object-fit: contain;\n  align-self: center;\n  width: 100%;\n  height: auto;\n  margin-bottom: 24px;\n}\n\n.fav-icon:hover {\n  cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome {{user.Username}}!                      Profile                    Sign Out                                {{movie.Title}}        Directed by: {{movie.Director.Name}}                                    Genre                          Director                          Synopsis                favorite        favorite_border            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DescriptionCardComponent', 'selector': 'app-description-card'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MovieCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileViewComponent.html":{"url":"components/ProfileViewComponent.html","title":"component - ProfileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile-view/profile-view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-view\n            \n\n            \n                styleUrls\n                ./profile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUsersFaves\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                movies\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToFavorites\n                            \n                            \n                                getMoviesAndFaves\n                            \n                            \n                                getUser\n                            \n                            \n                                goToMovieCard\n                            \n                            \n                                itIsAFave\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDescription\n                            \n                            \n                                openDirector\n                            \n                            \n                                openGenre\n                            \n                            \n                                openUpdateInfoCard\n                            \n                            \n                                removeFromFavorites\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, router: Router, snackBar: MatSnackBar, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile-view/profile-view.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToFavorites\n                        \n                    \n                \n            \n            \n                \naddToFavorites(movieId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMoviesAndFaves\n                        \n                    \n                \n            \n            \n                \ngetMoviesAndFaves()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:69\n                \n            \n\n\n            \n                \n                    call API endpoint to get all the movies in the database, then sets the currentUsersFaves variable to the set of movies that are stored\nas favorites in this.user.FavoriteMovies.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:53\n                \n            \n\n\n            \n                \n                    call API endpoint to get user info\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToMovieCard\n                        \n                    \n                \n            \n            \n                \ngoToMovieCard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:85\n                \n            \n\n\n            \n                \n                    function that gets the router to navigate to the MovieCardComponent\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itIsAFave\n                        \n                    \n                \n            \n            \n                \nitIsAFave(movieId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:183\n                \n            \n\n\n            \n                \n                    function used to monitor the favorite status of each movie. This is used to determine whether to display the fave icon or\nthe not-fave icon.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDescription\n                        \n                    \n                \n            \n            \n                \nopenDescription(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:141\n                \n            \n\n\n            \n                \n                    open a dialog to display the DescriptionCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDirector\n                        \n                    \n                \n            \n            \n                \nopenDirector(name: string, bio: string, birth: string, death: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:107\n                \n            \n\n\n            \n                \n                    open a dialog to display the DirectorCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bio\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    birth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    death\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGenre\n                        \n                    \n                \n            \n            \n                \nopenGenre(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:125\n                \n            \n\n\n            \n                \n                    open a dialog to display the GenreCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUpdateInfoCard\n                        \n                    \n                \n            \n            \n                \nopenUpdateInfoCard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:93\n                \n            \n\n\n            \n                \n                    open a dialog to edit the profile of the user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromFavorites\n                        \n                    \n                \n            \n            \n                \nremoveFromFavorites(movieId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:168\n                \n            \n\n\n            \n                \n                    call API endpoint to remove a movie from user's favorites. Also revises the currentUsersFaves variable so that it\nno longer includes the disfavored movie.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile-view/profile-view.component.ts:196\n                \n            \n\n\n            \n                \n                    function that gets the router to navigate to the welcome page when a user signs out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUsersFaves\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    Username: '',\n    Email: '',\n    Birthday: '',\n    FavoriteMovies: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/profile-view/profile-view.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { UserRegistrationService } from '../fetch-api-data.service'\nimport { UpdateInfoComponent } from '../update-info/update-info.component';\nimport { DirectorCardComponent } from '../director-card/director-card.component';\nimport { GenreCardComponent } from '../genre-card/genre-card.component';\nimport { DescriptionCardComponent } from '../description-card/description-card.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-profile-view',\n  templateUrl: './profile-view.component.html',\n  styleUrls: ['./profile-view.component.scss']\n})\n\nexport class ProfileViewComponent implements OnInit {\n  movies: any[] = [];\n  user: any = {\n    Username: '',\n    Email: '',\n    Birthday: '',\n    FavoriteMovies: [],\n  }\n  currentUsersFaves: any[] =[];\n\n  \n    constructor(\n      public fetchApiData: UserRegistrationService,\n      private router: Router,\n      public snackBar: MatSnackBar,\n      public dialog: MatDialog,\n      // @Inject(MAT_DIALOG_DATA)\n      \n    ) { }\n  \n    ngOnInit(): void {\n      this.getUser();\n      this.getMoviesAndFaves();\n    }\n\n\n    /**\n     * call API endpoint to get user info\n     * @function getUser\n     */\n    getUser() {\n      // this code sets the user object to the user found in localStorage\n      if (localStorage.getItem('user') != null) {\n        let userData: any = localStorage.getItem('user');\n        let username = JSON.parse(userData).Username;\n        this.fetchApiData.getUser(username).subscribe((resp: any) => {\n          this.user = resp;\n        });\n      };\n    }\n  \n    /**\n     * call API endpoint to get all the movies in the database, then sets the currentUsersFaves variable to the set of movies that are stored\n     * as favorites in this.user.FavoriteMovies.\n     * @function getMoviesAndFaves\n     */\n    getMoviesAndFaves() {\n      // this code sets the currentUsersFaves variable to the set of movies that the database has recorded as favorites for the user.\n      this.fetchApiData.getAllMovies().subscribe((res: any) => {\n        this.movies = res;\n        this.movies.forEach((movie) => {\n          if (this.user.FavoriteMovies.includes(movie._id)) {\n            this.currentUsersFaves.push(movie);\n          }\n        });\n      });\n    }\n\n    /**\n     * function that gets the router to navigate to the MovieCardComponent\n     * @function goToMovieCard\n     */\n    goToMovieCard(): void {\n      this.router.navigate(['movies']);\n    }\n\n    /**\n     * open a dialog to edit the profile of the user\n     * @module openUpdateInfoCard\n     */\n    openUpdateInfoCard(): void {\n      this.dialog.open(UpdateInfoComponent, {\n        width: '500px'\n      });\n    }\n\n    /**\n     *open a dialog to display the DirectorCardComponent\n     * @module openDirector\n     * @param name {string}\n     * @param bio {string}\n     * @param birth {string}\n     * @param death {string}\n     */\n    openDirector(name: string, bio: string, birth: string, death: string): void {\n      this.dialog.open(DirectorCardComponent, {\n        data: {\n          Name: name,\n          Bio: bio,\n          Birth: birth,\n          Death: death,\n        },\n        width: '500px'\n      });\n    }\n  \n    /**\n     *open a dialog to display the GenreCardComponent\n     * @module openGenre\n     * @param name {string}\n     * @param description {string}\n     */\n    openGenre(name: string, description: string): void {\n      this.dialog.open(GenreCardComponent, {\n        data: {\n          Name: name,\n          Description: description,\n        },\n        width: '500px'\n      });\n    }\n\n    /**\n     *open a dialog to display the DescriptionCardComponent\n     * @module openDescription\n     * @param name {string}\n     * @param description {string}\n     */\n    openDescription(name: string, description: string): void {\n      this.dialog.open(DescriptionCardComponent, {\n        data: {\n          Title: name,\n          Description: description,\n        },\n        width: '500px'\n      });\n    }\n\n    addToFavorites(movieId: string): void {\n      this.fetchApiData.addFavoriteMovie(movieId).subscribe((resp: any) => {\n        this.movies.forEach((movie) => {\n          if (movie._id == movieId) {\n            this.currentUsersFaves.push(movie);\n          }\n        });\n        this.snackBar.open('Added to favorites', 'OK', { duration: 2000 });\n      });\n    }\n\n    /**\n     * call API endpoint to remove a movie from user's favorites. Also revises the currentUsersFaves variable so that it \n     * no longer includes the disfavored movie.\n     * @function removeFromFavorites\n     * @param movieId {string}\n     */\n    removeFromFavorites(movieId: string): void {\n      this.fetchApiData.deleteFavoriteMovie(movieId).subscribe((resp: any) => {\n        const previousFavesWithDisfavoredMovieRemoved = this.currentUsersFaves.filter(movie => movie._id !== movieId);\n        this.currentUsersFaves = previousFavesWithDisfavoredMovieRemoved;\n        this.snackBar.open('Removed from favorites', 'OK', { duration: 2000 });\n      })\n    }\n  \n    /**\n     * function used to monitor the favorite status of each movie. This is used to determine whether to display the fave icon or\n     * the not-fave icon.\n     * @function itIsAFave\n     * @param movieId {string}\n     * @return Boolean\n     */\n    itIsAFave(movieId: string): any {\n      const movieArray: any[] = this.currentUsersFaves;\n      if(movieArray.some(movie => movie._id === movieId)){\n        return true;\n      } else {\n        return false;\n      }\n    }  \n\n    /**\n     * function that gets the router to navigate to the welcome page when a user signs out.\n     * @function signOut\n     */\n    signOut(): void {\n      this.router.navigate(['welcome']);\n      localStorage.clear();\n    }\n  \n  }\n\n\n\n    \n\n    \n        \n  \n    \n      Username: {{user.Username}}\n    \n    \n      Email: {{user.Email}}\n    \n    \n      Birthday: {{user.Birthday | date:'longDate'}}\n    \n    \n      Update Your Information\n    \n    \n      Go Back\n    \n  \n  \n    Sign Out\n  \n\n\n  \n    \n      \n        {{movie.Title}}\n        Directed by: {{movie.Director.Name}}\n      \n      \n      \n        \n          Genre\n        \n        \n          Director\n        \n        \n          Synopsis\n        \n        favorite\n        favorite_border\n      \n    \n  \n\n    \n\n    \n                \n                    ./profile-view.component.scss\n                \n                .favorites-list {\n  flex-wrap: wrap;\n}\n\n.movie-card {\n  width: 15%;\n  max-width: 320px;\n  margin: 15px 15px;\n  padding: 15px 15px;\n  opacity: 80%;\n  text-align: center;\n  transition: 0.3s;\n}\n\n.movie-card:hover {\n  opacity:100%;\n}\n\nmat-card-header {\n  display: flex;\n  justify-content: center;\n}\n\n.movie-poster {\n  width: 150px;\n}\n\n.profile-panel {\n  display: flex;\n  align-items: flex-end;\n  padding: 16px;\n  gap: 36px;\n  border-bottom: 1px solid;\n  margin-bottom: 16px;\n  background-color: white;\n  opacity: 80%;\n  flex-direction: row;\n  justify-content: space-between;\n  width: auto;\n  transition: 0.3s;\n}\n\n.sign-out-button {\n  display: flex;\n  justify-content: flex-end;\n  flex-direction: row;\n  height: fit-content;\n}\n\n.profile-panel:hover {\n  opacity: 100%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Username: {{user.Username}}              Email: {{user.Email}}              Birthday: {{user.Birthday | date:\\'longDate\\'}}              Update Your Information              Go Back            Sign Out                      {{movie.Title}}        Directed by: {{movie.Director.Name}}                                    Genre                          Director                          Synopsis                favorite        favorite_border            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DescriptionCardComponent', 'selector': 'app-description-card'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateInfoComponent.html":{"url":"components/UpdateInfoComponent.html","title":"component - UpdateInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/update-info/update-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-info\n            \n\n            \n                styleUrls\n                ./update-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackbar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                newData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialogRef: MatDialogRef, snackbar: MatSnackBar, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/update-info/update-info.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        newData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '', Email: '', Birthday: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/update-info/update-info.component.ts:22\n                            \n                        \n                \n                    \n                        This binds input values to the newData object.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/update-info/update-info.component.ts:44\n                \n            \n\n\n            \n                \n                    makes API call to update user information with the data in the NewData object, if info is correctly submitted there.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/update-info/update-info.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/update-info/update-info.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/update-info/update-info.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/update-info/update-info.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/update-info/update-info.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UserRegistrationService } from '../fetch-api-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-update-info',\n  templateUrl: './update-info.component.html',\n  styleUrls: ['./update-info.component.scss']\n})\n\nexport class UpdateInfoComponent implements OnInit {\n\n  /**\n   * This binds input values to the newData object.\n   */\n  @Input() newData = { Username: '', Password: '', Email: '', Birthday: '' };\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialogRef: MatDialogRef,\n    public snackbar: MatSnackBar,\n    @Inject(MAT_DIALOG_DATA)\n    public data: {\n      username: string;\n      password: string;\n      email: string;\n      birthday: Date;\n    }\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * makes API call to update user information with the data in the NewData object, if info is correctly submitted there.\n   * @function editUser\n   */\n  editUser(): void {\n    //prevent sending an empty field (that would erase the previous data and replace it with null)\n    if (this.newData.Username && this.newData.Password && this.newData.Email && this.newData.Birthday) {\n      this.fetchApiData.editUser(this.newData).subscribe((resp: any) => {\n        this.dialogRef.close();\n        window.location.reload();\n        localStorage.setItem('user', JSON.stringify(resp));\n        this.snackbar.open('Data successfully updated', 'OK', { duration: 2000 })\n      });\n      //alert when submitting an empty field\n    } else {\n      this.snackbar.open('Plase fill all the fields', 'OK', { duration: 2000 })\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n      Update Your Information\n    \n    \n      \n        \n          \n          \n          \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n\n    \n        Cancel\n        Save changes\n    \n\n  \n    \n\n    \n                \n                    ./update-info.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Update Your Information                                                                                                                                                Cancel        Save changes      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DescriptionCardComponent', 'selector': 'app-description-card'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserLoginFormComponent.html":{"url":"components/UserLoginFormComponent.html","title":"component - UserLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-login-form/user-login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-login-form\n            \n\n            \n                styleUrls\n                ./user-login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialogRef: MatDialogRef, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-login-form/user-login-form.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: ''}\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-login-form/user-login-form.component.ts:24\n                            \n                        \n                \n                    \n                        This binds data entered by the user to the userData object.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-login-form/user-login-form.component.ts:40\n                \n            \n\n\n            \n                \n                    This function makes an API call to login the user, then receives a JSON object including JWT and user data,\nwhich gets stored in localStorage as 'token' and 'user'\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-login-form/user-login-form.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n// You'll use this import to close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n// This import brings in the API calls we created in 6.2\nimport { UserRegistrationService } from '../fetch-api-data.service';\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-login-form',\n  templateUrl: './user-login-form.component.html',\n  styleUrls: ['./user-login-form.component.scss']\n})\nexport class UserLoginFormComponent implements OnInit {\n\n  /**\n   * This binds data entered by the user to the userData object.\n   */\n  @Input() userData = { Username: '', Password: ''};\n\n  constructor(    \n    public fetchApiData: UserRegistrationService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n/**\n * This function makes an API call to login the user, then receives a JSON object including JWT and user data,\n * which gets stored in localStorage as 'token' and 'user'\n * @function loginUser\n */\nloginUser(): void {\n  this.fetchApiData.userLogin(this.userData).subscribe((result) => {\n    this.dialogRef.close(); // This will close the modal on success!\n\n    localStorage.setItem('token', result.token);\n    localStorage.setItem('user', JSON.stringify(result.user));\n\n    this.snackBar.open(result, 'OK', {\n      duration: 2000\n    });\n    this.router.navigate(['movies']);\n  }, (result) => {\n    this.snackBar.open(result, 'OK', {\n      duration: 2000\n    });\n  });\n}\n\n}\n\n    \n\n    \n        \n    \n      Login!\n    \n    \n      \n        \n          \n          \n          \n          \n        \n      \n    \n    \n        \n          Login\n        \n    \n  \n    \n\n    \n                \n                    ./user-login-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Login!                                                                                                      Login              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DescriptionCardComponent', 'selector': 'app-description-card'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserRegistrationFormComponent.html":{"url":"components/UserRegistrationFormComponent.html","title":"component - UserRegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserRegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-registration-form/user-registration-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-registration-form\n            \n\n            \n                styleUrls\n                ./user-registration-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-registration-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialogRef: MatDialogRef, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '', Email: '', Birthday: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-registration-form/user-registration-form.component.ts:25\n                            \n                        \n                \n                    \n                        This binds data entered by the user to the userData object.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-registration-form/user-registration-form.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-registration-form/user-registration-form.component.ts:41\n                \n            \n\n\n            \n                \n                    This function makes an API call to register the user, then receives a JSON object including JWT and user data,\nwhich gets stored in localStorage as 'token' and 'user'\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n// You'll use this import to close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n// This import brings in the API calls we created in 6.2\nimport { UserRegistrationService } from '../fetch-api-data.service';\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-user-registration-form',\n  templateUrl: './user-registration-form.component.html',\n  styleUrls: ['./user-registration-form.component.scss']\n})\nexport class UserRegistrationFormComponent implements OnInit {\n\n  /**\n   * This binds data entered by the user to the userData object.\n   */\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * This function makes an API call to register the user, then receives a JSON object including JWT and user data,\n   * which gets stored in localStorage as 'token' and 'user'\n   * @function loginUser\n   */\n  registerUser(): void {\n    this.fetchApiData.userRegistration(this.userData).subscribe((result) => {\n    this.dialogRef.close(); // This will close the modal on success!\n    console.log(result);\n    this.snackBar.open(result, 'OK', {\n        duration: 2000\n    });\n    }, (result) => {\n      console.log(result);\n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n    });\n  }\n\n}\n    \n\n    \n        \n\n    \n      Sign Up!\n    \n    \n      \n        \n          \n          \n          \n          \n        \n        \n          \n        \n        \n          \n        \n      \n    \n    \n        \n          Sign Up\n        \n    \n  \n    \n\n    \n                \n                    ./user-registration-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Sign Up!                                                                                                                                                          Sign Up              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DescriptionCardComponent', 'selector': 'app-description-card'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserRegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegistrationService.html":{"url":"injectables/UserRegistrationService.html","title":"injectable - UserRegistrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRegistrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fetch-api-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavoriteMovie\n                            \n                            \n                                deleteFavoriteMovie\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                    Private\n                                extractResponseData\n                            \n                            \n                                getAllMovies\n                            \n                            \n                                getDirector\n                            \n                            \n                                getFavorites\n                            \n                            \n                                getGenre\n                            \n                            \n                                getMovie\n                            \n                            \n                                getUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userRegistration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/fetch-api-data.service.ts:15\n                            \n                        \n\n                \n                    \n                            Here we inject the HttpClient module to the constructor params.\nThis will provide HttpClient to the entire class, making it available via this.http\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavoriteMovie\n                        \n                    \n                \n            \n            \n                \naddFavoriteMovie(movieID: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:168\n                \n            \n\n\n            \n                \n                    Makes the API call to add a movie to the user's favorites.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieID\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with information about the user, including the updated collection of favorites\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFavoriteMovie\n                        \n                    \n                \n            \n            \n                \ndeleteFavoriteMovie(movieID: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:191\n                \n            \n\n\n            \n                \n                    Makes the API call to remove a movie to the user's favorites.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieID\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with information about the user, including the updated collection of favorites\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(username: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:237\n                \n            \n\n\n            \n                \n                    Makes the API call to delete a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        string (if successful: \"exampleUser was deleted.\")\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:214\n                \n            \n\n\n            \n                \n                    Makes the API call to edit a user's info\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with information about the user, including favorites\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractResponseData\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractResponseData(res: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:68\n                \n            \n\n\n            \n                \n                    Non-typed response extraction\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        response || empty object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllMovies\n                        \n                    \n                \n            \n            \n                \ngetAllMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:52\n                \n            \n\n\n            \n                \n                    Make API call to get all movies\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Array of movie objects.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirector\n                        \n                    \n                \n            \n            \n                \ngetDirector(directorName: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:96\n                \n            \n\n\n            \n                \n                    Makes the API call to get more information about a particular director\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directorName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with data about the given director\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavorites\n                        \n                    \n                \n            \n            \n                \ngetFavorites(username: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:150\n                \n            \n\n\n            \n                \n                    Makes the API call to get information about the user's favorites.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with a key of \"Favorites\" whose value is an array of the movieIDs of the user's favorites\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGenre\n                        \n                    \n                \n            \n            \n                \ngetGenre(genreName: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:114\n                \n            \n\n\n            \n                \n                    Makes the API call to get more information about a particular genre\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    genreName\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with data about the given genre\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovie\n                        \n                    \n                \n            \n            \n                \ngetMovie(movieID: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:78\n                \n            \n\n\n            \n                \n                    Makes the API call to get one particular movie\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieID\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with data about the given movie\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(username: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:132\n                \n            \n\n\n            \n                \n                    Makes the API call to get information about a particular user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        object with all information about a user, including favorites\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:250\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:41\n                \n            \n\n\n            \n                \n                    Make API call to the user login endpoint\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        JSON object with JWT and user info, including favorites.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userRegistration\n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegistration(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:29\n                \n            \n\n\n            \n                \n                    Make API call to the user registration endpoint\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a JSON object with user info (name, birthday, email)\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n// import { catchError } from 'rxjs/internal/operators'; note that I import this from rxjs/operators instead because this one seems not to work.\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n\n/** \n * This declares the api url that will provide data for the client app\n */\nconst apiUrl = 'https://cfmovieapp.herokuapp.com/';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegistrationService {\n  /**\n   * Here we inject the HttpClient module to the constructor params.\n   * This will provide HttpClient to the entire class, making it available via this.http\n   * @param http\n   */\n  constructor(private http: HttpClient) {\n  }\n  \n  /** Make API call to the user registration endpoint\n   * @funtion userRegistration\n   * @param userDetails\n   * @returns a JSON object with user info (name, birthday, email)\n   */\n  public userRegistration(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http.post(apiUrl + 'users', userDetails).pipe(\n    catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Make API call to the user login endpoint\n   * @param userDetails \n   * @returns JSON object with JWT and user info, including favorites.\n   */\n  public userLogin(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http.post(apiUrl + 'login', userDetails).pipe(\n    catchError(this.handleError)\n    );\n  }\n  \n  /**\n   * Make API call to get all movies\n   * @returns Array of movie objects.\n   */\n  getAllMovies(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'movies', {headers: new HttpHeaders(\n      {\n        Authorization: 'Bearer ' + token,\n      })}).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Non-typed response extraction\n   * @param res {any}\n   * @returns response || empty object\n   */\n  private extractResponseData(res: any): any {\n    const body = res;\n    return body || { };\n  }\n\n  /**\n   * Makes the API call to get one particular movie\n   * @param movieID \n   * @returns object with data about the given movie\n   */\n  getMovie(movieID: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'movies/' + movieID, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Makes the API call to get more information about a particular director\n   * @param directorName \n   * @returns object with data about the given director\n   */\n  getDirector(directorName: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'directors/' + directorName, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Makes the API call to get more information about a particular genre\n   * @param genreName \n   * @returns object with data about the given genre\n   */\n  getGenre(genreName: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'genres/' + genreName, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Makes the API call to get information about a particular user\n   * @param username \n   * @returns object with all information about a user, including favorites\n   */\n  getUser(username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'users/' + username, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Makes the API call to get information about the user's favorites.\n   * @param username \n   * @returns object with a key of \"Favorites\" whose value is an array of the movieIDs of the user's favorites\n   */\n  getFavorites(username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.get(apiUrl + 'users/' + username + '/favorites', {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Makes the API call to add a movie to the user's favorites.\n   * @param movieID\n   * @returns object with information about the user, including the updated collection of favorites\n   */\n  addFavoriteMovie(movieID: any): Observable {\n    // These lines are needed because the user in localStorage is a string, so we have to change it to an object, and then extract the username from that object--\n    const user: any = localStorage.getItem('user');\n    const userObject: any = JSON.parse(user);\n    const username: any = userObject.Username;\n    // The rest is explanatory:\n    const token = localStorage.getItem('token');\n    return this.http.post(apiUrl + 'users/' + username + '/movies/' + movieID, {}, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Makes the API call to remove a movie to the user's favorites.\n   * @param movieID\n   * @returns object with information about the user, including the updated collection of favorites\n   */\n  deleteFavoriteMovie(movieID: any): Observable {\n    // These lines are needed because the user in localStorage is a string, so we have to change it to an object, and then extract the username from that object--\n    const user: any = localStorage.getItem('user');\n    const userObject: any = JSON.parse(user);\n    const username: any = userObject.Username;\n    // The rest is explanatory:\n    const token = localStorage.getItem('token');\n    return this.http.delete(apiUrl + 'users/' + username + '/movies/' + movieID, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Makes the API call to edit a user's info\n   * @param userDetails \n   * @returns object with information about the user, including favorites\n   */\n  editUser(userDetails: any): Observable {\n    // These lines are needed because the user in localStorage is a string, so we have to change it to an object, and then extract the username from that object--\n    const user: any = localStorage.getItem('user')\n    const userObject: any = JSON.parse(user);\n    const username: any = userObject.Username;\n    // The rest is explanatory:\n    const token = localStorage.getItem('token');\n    return this.http.put(apiUrl + 'users/' + username, userDetails, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Makes the API call to delete a user\n   * @param username \n   * @returns string (if successful: \"exampleUser was deleted.\")\n   */\n  deleteUser(username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http.delete(apiUrl + 'users/' + username, {\n      headers: new HttpHeaders(\n        {\n          Authorization: 'Bearer ' + token,\n        })\n    }).pipe(\n      map(this.extractResponseData),\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(\n    'Something bad happened; please try again later.');\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomePageComponent.html":{"url":"components/WelcomePageComponent.html","title":"component - WelcomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WelcomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/welcome-page/welcome-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-welcome-page\n            \n\n            \n                styleUrls\n                ./welcome-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./welcome-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openUserLoginDialog\n                            \n                            \n                                openUserRegistrationDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/welcome-page/welcome-page.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserLoginDialog\n                        \n                    \n                \n            \n            \n                \nopenUserLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:33\n                \n            \n\n\n            \n                \n                    open dialog to display the login form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserRegistrationDialog\n                        \n                    \n                \n            \n            \n                \nopenUserRegistrationDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:24\n                \n            \n\n\n            \n                \n                    open dialog to display the registration form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/welcome-page/welcome-page.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserLoginFormComponent } from '../user-login-form/user-login-form.component';\nimport { UserRegistrationFormComponent } from '../user-registration-form/user-registration-form.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.scss']\n})\nexport class WelcomePageComponent implements OnInit {\n  constructor(public dialog: MatDialog) { }\n  ngOnInit(): void {\n  }\n  /**\n   * open dialog to display the registration form\n   * @module openUserRegistrationDialog\n   */\n  openUserRegistrationDialog(): void {\n    this.dialog.open(UserRegistrationFormComponent, {\n      width: '280px'\n    });\n  }\n  /**\n   * open dialog to display the login form\n   * @module openUserLoginDialog\n   */\n  openUserLoginDialog(): void {\n    this.dialog.open(UserLoginFormComponent, {\n      width: '280px'\n    });\n  }\n}\n    \n\n    \n        \n  \n    \n      Welcome to myFlix!\n    \n    \n      Sign Up\n    \n    \n      Login\n    \n  \n\n    \n\n    \n                \n                    ./welcome-page.component.scss\n                \n                .welcome-window {\n  margin-top: 100px;\n  text-align: center;\n  background-color: white;\n  width: 300px;\n  padding: 15px;\n  margin: auto;\n  margin-top: 100px;\n  border-radius: 3px;\n  opacity: 80%;\n  transition: 0.3s;\n}\n\n.welcome-window:hover {\n  opacity: 100%\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to myFlix!              Sign Up              Login      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DescriptionCardComponent', 'selector': 'app-description-card'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'ProfileViewComponent', 'selector': 'app-profile-view'},{'name': 'UpdateInfoComponent', 'selector': 'app-update-info'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/description-card/description-card.component.ts\n            \n            component\n            DescriptionCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/director-card/director-card.component.ts\n            \n            component\n            DirectorCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            injectable\n            UserRegistrationService\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            variable\n            apiUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/genre-card/genre-card.component.ts\n            \n            component\n            GenreCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/movie-card/movie-card.component.ts\n            \n            component\n            MovieCardComponent\n            \n                52 %\n                (10/19)\n            \n        \n        \n            \n                \n                src/app/profile-view/profile-view.component.ts\n            \n            component\n            ProfileViewComponent\n            \n                50 %\n                (10/20)\n            \n        \n        \n            \n                \n                src/app/update-info/update-info.component.ts\n            \n            component\n            UpdateInfoComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/user-login-form/user-login-form.component.ts\n            \n            component\n            UserLoginFormComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/user-registration-form/user-registration-form.component.ts\n            \n            component\n            UserRegistrationFormComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/welcome-page/welcome-page.component.ts\n            \n            component\n            WelcomePageComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/cdk : ^13.2.1\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/material : ^13.2.1\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyFlixAngularClient\nThis project was generated with Angular CLI version 13.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDescriptionCardComponent\n\nDescriptionCardComponent\n\nAppModule -->\n\nDescriptionCardComponent->AppModule\n\n\n\n\n\nDirectorCardComponent\n\nDirectorCardComponent\n\nAppModule -->\n\nDirectorCardComponent->AppModule\n\n\n\n\n\nGenreCardComponent\n\nGenreCardComponent\n\nAppModule -->\n\nGenreCardComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nProfileViewComponent\n\nProfileViewComponent\n\nAppModule -->\n\nProfileViewComponent->AppModule\n\n\n\n\n\nUpdateInfoComponent\n\nUpdateInfoComponent\n\nAppModule -->\n\nUpdateInfoComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrl   (src/.../fetch-api-data.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/fetch-api-data.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://cfmovieapp.herokuapp.com/'\n                    \n                \n\n            \n                \n                    This declares the api url that will provide data for the client app\n\n                \n            \n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
